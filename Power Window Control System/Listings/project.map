Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    main.o(.text.main) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    main.o(.text.main) refers to main.o(.bss.xDriverUpButtonMutex) for xDriverUpButtonMutex
    main.o(.text.main) refers to main.o(.bss.xDriverDownButtonMutex) for xDriverDownButtonMutex
    main.o(.text.main) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    main.o(.text.main) refers to main.o(.bss.xQueue) for xQueue
    main.o(.text.main) refers to main.o(.bss.xupperLimitReachedSemaphore) for xupperLimitReachedSemaphore
    main.o(.text.main) refers to main.o(.bss.xlowerLimitReachedSemaphore) for xlowerLimitReachedSemaphore
    main.o(.text.main) refers to main.o(.bss.xwindowLockSemaphore) for xwindowLockSemaphore
    main.o(.text.main) refers to main.o(.bss.xjamDetectedSemaphore) for xjamDetectedSemaphore
    main.o(.text.main) refers to main.o(.text.portCinit) for portCinit
    main.o(.text.main) refers to main.o(.text.portEinit) for portEinit
    main.o(.text.main) refers to lcd.o(.text.LCD_init) for LCD_init
    main.o(.text.main) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    main.o(.text.main) refers to motor.o(.text.motorinit) for motorinit
    main.o(.text.main) refers to main.o(.text.setUpperLimit) for setUpperLimit
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.text.setLowerLimit) for setLowerLimit
    main.o(.text.main) refers to main.o(.text.setWindowLock) for setWindowLock
    main.o(.text.main) refers to main.o(.text.setJamDetected) for setJamDetected
    main.o(.text.main) refers to main.o(.text.buttonTask) for buttonTask
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.setUpperLimit) refers to main.o(.bss.xupperLimitReachedSemaphore) for xupperLimitReachedSemaphore
    main.o(.text.setUpperLimit) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.setUpperLimit) refers to main.o(.bss.upperLimitReached) for upperLimitReached
    main.o(.ARM.exidx.text.setUpperLimit) refers to main.o(.text.setUpperLimit) for [Anonymous Symbol]
    main.o(.text.setLowerLimit) refers to main.o(.bss.xlowerLimitReachedSemaphore) for xlowerLimitReachedSemaphore
    main.o(.text.setLowerLimit) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.setLowerLimit) refers to main.o(.bss.lowerLimitReached) for lowerLimitReached
    main.o(.ARM.exidx.text.setLowerLimit) refers to main.o(.text.setLowerLimit) for [Anonymous Symbol]
    main.o(.text.setWindowLock) refers to main.o(.bss.xwindowLockSemaphore) for xwindowLockSemaphore
    main.o(.text.setWindowLock) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.setWindowLock) refers to main.o(.bss.windowLock) for windowLock
    main.o(.ARM.exidx.text.setWindowLock) refers to main.o(.text.setWindowLock) for [Anonymous Symbol]
    main.o(.text.setJamDetected) refers to main.o(.bss.xjamDetectedSemaphore) for xjamDetectedSemaphore
    main.o(.text.setJamDetected) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.setJamDetected) refers to main.o(.bss.jamDetected) for jamDetected
    main.o(.ARM.exidx.text.setJamDetected) refers to main.o(.text.setJamDetected) for [Anonymous Symbol]
    main.o(.text.buttonTask) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    main.o(.text.buttonTask) refers to main.o(.bss.xDriverUpButtonMutex) for xDriverUpButtonMutex
    main.o(.text.buttonTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.buttonTask) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.buttonTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.buttonTask) refers to main.o(.bss.xdrivUpManuHandle) for xdrivUpManuHandle
    main.o(.text.buttonTask) refers to main.o(.text.drivUpManu) for drivUpManu
    main.o(.text.buttonTask) refers to main.o(.rodata.str1.1) for .L.str.5
    main.o(.text.buttonTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.buttonTask) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    main.o(.text.buttonTask) refers to main.o(.bss.xdrivUpAutoHandle) for xdrivUpAutoHandle
    main.o(.text.buttonTask) refers to main.o(.text.drivUpAuto) for drivUpAuto
    main.o(.text.buttonTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.buttonTask) refers to main.o(.bss.xDriverDownButtonMutex) for xDriverDownButtonMutex
    main.o(.text.buttonTask) refers to main.o(.bss.xdrivDownManuHandle) for xdrivDownManuHandle
    main.o(.text.buttonTask) refers to main.o(.text.drivDownManu) for drivDownManu
    main.o(.text.buttonTask) refers to main.o(.bss.xdrivDownAutoHandle) for xdrivDownAutoHandle
    main.o(.text.buttonTask) refers to main.o(.text.drivDownAuto) for drivDownAuto
    main.o(.text.buttonTask) refers to main.o(.bss.xpassUpManuHandle) for xpassUpManuHandle
    main.o(.text.buttonTask) refers to main.o(.text.passUpManu) for passUpManu
    main.o(.text.buttonTask) refers to main.o(.bss.xpassUpAutoHandle) for xpassUpAutoHandle
    main.o(.text.buttonTask) refers to main.o(.text.passUpAuto) for passUpAuto
    main.o(.text.buttonTask) refers to main.o(.bss.xpassDownManuHandle) for xpassDownManuHandle
    main.o(.text.buttonTask) refers to main.o(.text.passDownManu) for passDownManu
    main.o(.text.buttonTask) refers to main.o(.bss.xpassDownAutoHandle) for xpassDownAutoHandle
    main.o(.text.buttonTask) refers to main.o(.text.passDownAuto) for passDownAuto
    main.o(.ARM.exidx.text.buttonTask) refers to main.o(.text.buttonTask) for [Anonymous Symbol]
    main.o(.text.drivUpManu) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    main.o(.text.drivUpManu) refers to main.o(.bss.xQueue) for xQueue
    main.o(.text.drivUpManu) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.drivUpManu) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    main.o(.text.drivUpManu) refers to main.o(.data.pctextforlcd2) for pctextforlcd2
    main.o(.text.drivUpManu) refers to main.o(.text.vlcdWrite) for vlcdWrite
    main.o(.text.drivUpManu) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.drivUpManu) refers to main.o(.bss.upperLimitReached) for upperLimitReached
    main.o(.text.drivUpManu) refers to main.o(.bss.jamDetected) for jamDetected
    main.o(.text.drivUpManu) refers to main.o(.bss.windowLock) for windowLock
    main.o(.text.drivUpManu) refers to motor.o(.text.motor_forward) for motor_forward
    main.o(.text.drivUpManu) refers to main.o(.bss.lowerLimitReached) for lowerLimitReached
    main.o(.text.drivUpManu) refers to motor.o(.text.motor_stop) for motor_stop
    main.o(.text.drivUpManu) refers to main.o(.rodata.str1.1) for .L.str.16
    main.o(.text.drivUpManu) refers to lcd.o(.text.LCD_PrintLn) for LCD_PrintLn
    main.o(.text.drivUpManu) refers to main.o(.bss.xdrivUpManuHandle) for xdrivUpManuHandle
    main.o(.text.drivUpManu) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    main.o(.text.drivUpManu) refers to motor.o(.text.motor_backward) for motor_backward
    main.o(.ARM.exidx.text.drivUpManu) refers to main.o(.text.drivUpManu) for [Anonymous Symbol]
    main.o(.text.drivUpAuto) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    main.o(.text.drivUpAuto) refers to main.o(.bss.xQueue) for xQueue
    main.o(.text.drivUpAuto) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.drivUpAuto) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    main.o(.text.drivUpAuto) refers to main.o(.data.pctextforlcd1) for pctextforlcd1
    main.o(.text.drivUpAuto) refers to main.o(.text.vlcdWrite) for vlcdWrite
    main.o(.text.drivUpAuto) refers to main.o(.bss.upperLimitReached) for upperLimitReached
    main.o(.text.drivUpAuto) refers to main.o(.bss.jamDetected) for jamDetected
    main.o(.text.drivUpAuto) refers to main.o(.bss.windowLock) for windowLock
    main.o(.text.drivUpAuto) refers to motor.o(.text.motor_forward) for motor_forward
    main.o(.text.drivUpAuto) refers to main.o(.bss.lowerLimitReached) for lowerLimitReached
    main.o(.text.drivUpAuto) refers to motor.o(.text.motor_stop) for motor_stop
    main.o(.text.drivUpAuto) refers to main.o(.rodata.str1.1) for .L.str.13
    main.o(.text.drivUpAuto) refers to lcd.o(.text.LCD_PrintLn) for LCD_PrintLn
    main.o(.text.drivUpAuto) refers to main.o(.bss.xdrivUpAutoHandle) for xdrivUpAutoHandle
    main.o(.text.drivUpAuto) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    main.o(.text.drivUpAuto) refers to motor.o(.text.motor_backward) for motor_backward
    main.o(.ARM.exidx.text.drivUpAuto) refers to main.o(.text.drivUpAuto) for [Anonymous Symbol]
    main.o(.text.drivDownManu) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    main.o(.text.drivDownManu) refers to main.o(.bss.xQueue) for xQueue
    main.o(.text.drivDownManu) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.drivDownManu) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    main.o(.text.drivDownManu) refers to main.o(.data.pctextforlcd4) for pctextforlcd4
    main.o(.text.drivDownManu) refers to main.o(.text.vlcdWrite) for vlcdWrite
    main.o(.text.drivDownManu) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.drivDownManu) refers to main.o(.bss.lowerLimitReached) for lowerLimitReached
    main.o(.text.drivDownManu) refers to main.o(.bss.jamDetected) for jamDetected
    main.o(.text.drivDownManu) refers to main.o(.bss.windowLock) for windowLock
    main.o(.text.drivDownManu) refers to motor.o(.text.motor_backward) for motor_backward
    main.o(.text.drivDownManu) refers to main.o(.bss.upperLimitReached) for upperLimitReached
    main.o(.text.drivDownManu) refers to motor.o(.text.motor_stop) for motor_stop
    main.o(.text.drivDownManu) refers to main.o(.rodata.str1.1) for .L.str.16
    main.o(.text.drivDownManu) refers to lcd.o(.text.LCD_PrintLn) for LCD_PrintLn
    main.o(.text.drivDownManu) refers to main.o(.bss.xdrivDownManuHandle) for xdrivDownManuHandle
    main.o(.text.drivDownManu) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    main.o(.text.drivDownManu) refers to motor.o(.text.motor_forward) for motor_forward
    main.o(.ARM.exidx.text.drivDownManu) refers to main.o(.text.drivDownManu) for [Anonymous Symbol]
    main.o(.text.drivDownAuto) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    main.o(.text.drivDownAuto) refers to main.o(.bss.xQueue) for xQueue
    main.o(.text.drivDownAuto) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.drivDownAuto) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    main.o(.text.drivDownAuto) refers to main.o(.data.pctextforlcd3) for pctextforlcd3
    main.o(.text.drivDownAuto) refers to main.o(.text.vlcdWrite) for vlcdWrite
    main.o(.text.drivDownAuto) refers to main.o(.bss.lowerLimitReached) for lowerLimitReached
    main.o(.text.drivDownAuto) refers to main.o(.bss.jamDetected) for jamDetected
    main.o(.text.drivDownAuto) refers to main.o(.bss.windowLock) for windowLock
    main.o(.text.drivDownAuto) refers to motor.o(.text.motor_backward) for motor_backward
    main.o(.text.drivDownAuto) refers to main.o(.bss.upperLimitReached) for upperLimitReached
    main.o(.text.drivDownAuto) refers to motor.o(.text.motor_stop) for motor_stop
    main.o(.text.drivDownAuto) refers to main.o(.rodata.str1.1) for .L.str.13
    main.o(.text.drivDownAuto) refers to lcd.o(.text.LCD_PrintLn) for LCD_PrintLn
    main.o(.text.drivDownAuto) refers to main.o(.bss.xdrivDownAutoHandle) for xdrivDownAutoHandle
    main.o(.text.drivDownAuto) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    main.o(.text.drivDownAuto) refers to motor.o(.text.motor_forward) for motor_forward
    main.o(.ARM.exidx.text.drivDownAuto) refers to main.o(.text.drivDownAuto) for [Anonymous Symbol]
    main.o(.text.passUpManu) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    main.o(.text.passUpManu) refers to main.o(.data.pctextforlcd6) for pctextforlcd6
    main.o(.text.passUpManu) refers to main.o(.text.vlcdWrite) for vlcdWrite
    main.o(.text.passUpManu) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.passUpManu) refers to main.o(.bss.upperLimitReached) for upperLimitReached
    main.o(.text.passUpManu) refers to main.o(.bss.jamDetected) for jamDetected
    main.o(.text.passUpManu) refers to main.o(.bss.windowLock) for windowLock
    main.o(.text.passUpManu) refers to motor.o(.text.motor_forward) for motor_forward
    main.o(.text.passUpManu) refers to main.o(.bss.lowerLimitReached) for lowerLimitReached
    main.o(.text.passUpManu) refers to main.o(.bss.xDriverUpButtonMutex) for xDriverUpButtonMutex
    main.o(.text.passUpManu) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.passUpManu) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.passUpManu) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    main.o(.text.passUpManu) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    main.o(.text.passUpManu) refers to main.o(.bss.xTaskHandlePassed) for xTaskHandlePassed
    main.o(.text.passUpManu) refers to main.o(.bss.xQueue) for xQueue
    main.o(.text.passUpManu) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.passUpManu) refers to main.o(.bss.xdrivUpManuHandle) for xdrivUpManuHandle
    main.o(.text.passUpManu) refers to main.o(.text.drivUpManu) for drivUpManu
    main.o(.text.passUpManu) refers to main.o(.rodata.str1.1) for .L.str.5
    main.o(.text.passUpManu) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.passUpManu) refers to main.o(.bss.xdrivUpAutoHandle) for xdrivUpAutoHandle
    main.o(.text.passUpManu) refers to main.o(.text.drivUpAuto) for drivUpAuto
    main.o(.text.passUpManu) refers to main.o(.bss.xDriverDownButtonMutex) for xDriverDownButtonMutex
    main.o(.text.passUpManu) refers to main.o(.bss.xdrivDownManuHandle) for xdrivDownManuHandle
    main.o(.text.passUpManu) refers to main.o(.text.drivDownManu) for drivDownManu
    main.o(.text.passUpManu) refers to main.o(.bss.xdrivDownAutoHandle) for xdrivDownAutoHandle
    main.o(.text.passUpManu) refers to main.o(.text.drivDownAuto) for drivDownAuto
    main.o(.text.passUpManu) refers to motor.o(.text.motor_stop) for motor_stop
    main.o(.text.passUpManu) refers to lcd.o(.text.LCD_PrintLn) for LCD_PrintLn
    main.o(.text.passUpManu) refers to main.o(.bss.xpassUpManuHandle) for xpassUpManuHandle
    main.o(.text.passUpManu) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    main.o(.text.passUpManu) refers to motor.o(.text.motor_backward) for motor_backward
    main.o(.ARM.exidx.text.passUpManu) refers to main.o(.text.passUpManu) for [Anonymous Symbol]
    main.o(.text.passUpAuto) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    main.o(.text.passUpAuto) refers to main.o(.data.pctextforlcd5) for pctextforlcd5
    main.o(.text.passUpAuto) refers to main.o(.text.vlcdWrite) for vlcdWrite
    main.o(.text.passUpAuto) refers to main.o(.bss.upperLimitReached) for upperLimitReached
    main.o(.text.passUpAuto) refers to main.o(.bss.jamDetected) for jamDetected
    main.o(.text.passUpAuto) refers to main.o(.bss.windowLock) for windowLock
    main.o(.text.passUpAuto) refers to motor.o(.text.motor_forward) for motor_forward
    main.o(.text.passUpAuto) refers to main.o(.bss.lowerLimitReached) for lowerLimitReached
    main.o(.text.passUpAuto) refers to main.o(.bss.xDriverUpButtonMutex) for xDriverUpButtonMutex
    main.o(.text.passUpAuto) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.passUpAuto) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.passUpAuto) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.passUpAuto) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    main.o(.text.passUpAuto) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    main.o(.text.passUpAuto) refers to main.o(.bss.xTaskHandlePassed) for xTaskHandlePassed
    main.o(.text.passUpAuto) refers to main.o(.bss.xQueue) for xQueue
    main.o(.text.passUpAuto) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.passUpAuto) refers to main.o(.bss.xdrivUpManuHandle) for xdrivUpManuHandle
    main.o(.text.passUpAuto) refers to main.o(.text.drivUpManu) for drivUpManu
    main.o(.text.passUpAuto) refers to main.o(.rodata.str1.1) for .L.str.5
    main.o(.text.passUpAuto) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.passUpAuto) refers to main.o(.bss.xdrivUpAutoHandle) for xdrivUpAutoHandle
    main.o(.text.passUpAuto) refers to main.o(.text.drivUpAuto) for drivUpAuto
    main.o(.text.passUpAuto) refers to main.o(.bss.xDriverDownButtonMutex) for xDriverDownButtonMutex
    main.o(.text.passUpAuto) refers to main.o(.bss.xdrivDownManuHandle) for xdrivDownManuHandle
    main.o(.text.passUpAuto) refers to main.o(.text.drivDownManu) for drivDownManu
    main.o(.text.passUpAuto) refers to main.o(.bss.xdrivDownAutoHandle) for xdrivDownAutoHandle
    main.o(.text.passUpAuto) refers to main.o(.text.drivDownAuto) for drivDownAuto
    main.o(.text.passUpAuto) refers to motor.o(.text.motor_stop) for motor_stop
    main.o(.text.passUpAuto) refers to lcd.o(.text.LCD_PrintLn) for LCD_PrintLn
    main.o(.text.passUpAuto) refers to main.o(.bss.xpassUpAutoHandle) for xpassUpAutoHandle
    main.o(.text.passUpAuto) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    main.o(.text.passUpAuto) refers to motor.o(.text.motor_backward) for motor_backward
    main.o(.ARM.exidx.text.passUpAuto) refers to main.o(.text.passUpAuto) for [Anonymous Symbol]
    main.o(.text.passDownManu) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    main.o(.text.passDownManu) refers to main.o(.data.pctextforlcd8) for pctextforlcd8
    main.o(.text.passDownManu) refers to main.o(.text.vlcdWrite) for vlcdWrite
    main.o(.text.passDownManu) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.passDownManu) refers to main.o(.bss.lowerLimitReached) for lowerLimitReached
    main.o(.text.passDownManu) refers to main.o(.bss.jamDetected) for jamDetected
    main.o(.text.passDownManu) refers to main.o(.bss.windowLock) for windowLock
    main.o(.text.passDownManu) refers to motor.o(.text.motor_backward) for motor_backward
    main.o(.text.passDownManu) refers to main.o(.bss.upperLimitReached) for upperLimitReached
    main.o(.text.passDownManu) refers to main.o(.bss.xDriverUpButtonMutex) for xDriverUpButtonMutex
    main.o(.text.passDownManu) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.passDownManu) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.passDownManu) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    main.o(.text.passDownManu) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    main.o(.text.passDownManu) refers to main.o(.bss.xTaskHandlePassed) for xTaskHandlePassed
    main.o(.text.passDownManu) refers to main.o(.bss.xQueue) for xQueue
    main.o(.text.passDownManu) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.passDownManu) refers to main.o(.bss.xdrivUpManuHandle) for xdrivUpManuHandle
    main.o(.text.passDownManu) refers to main.o(.text.drivUpManu) for drivUpManu
    main.o(.text.passDownManu) refers to main.o(.rodata.str1.1) for .L.str.5
    main.o(.text.passDownManu) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.passDownManu) refers to main.o(.bss.xdrivUpAutoHandle) for xdrivUpAutoHandle
    main.o(.text.passDownManu) refers to main.o(.text.drivUpAuto) for drivUpAuto
    main.o(.text.passDownManu) refers to main.o(.bss.xDriverDownButtonMutex) for xDriverDownButtonMutex
    main.o(.text.passDownManu) refers to main.o(.bss.xdrivDownManuHandle) for xdrivDownManuHandle
    main.o(.text.passDownManu) refers to main.o(.text.drivDownManu) for drivDownManu
    main.o(.text.passDownManu) refers to main.o(.bss.xdrivDownAutoHandle) for xdrivDownAutoHandle
    main.o(.text.passDownManu) refers to main.o(.text.drivDownAuto) for drivDownAuto
    main.o(.text.passDownManu) refers to motor.o(.text.motor_stop) for motor_stop
    main.o(.text.passDownManu) refers to lcd.o(.text.LCD_PrintLn) for LCD_PrintLn
    main.o(.text.passDownManu) refers to main.o(.bss.xpassDownManuHandle) for xpassDownManuHandle
    main.o(.text.passDownManu) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    main.o(.text.passDownManu) refers to motor.o(.text.motor_forward) for motor_forward
    main.o(.ARM.exidx.text.passDownManu) refers to main.o(.text.passDownManu) for [Anonymous Symbol]
    main.o(.text.passDownAuto) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    main.o(.text.passDownAuto) refers to main.o(.data.pctextforlcd7) for pctextforlcd7
    main.o(.text.passDownAuto) refers to main.o(.text.vlcdWrite) for vlcdWrite
    main.o(.text.passDownAuto) refers to main.o(.bss.lowerLimitReached) for lowerLimitReached
    main.o(.text.passDownAuto) refers to main.o(.bss.jamDetected) for jamDetected
    main.o(.text.passDownAuto) refers to main.o(.bss.windowLock) for windowLock
    main.o(.text.passDownAuto) refers to motor.o(.text.motor_backward) for motor_backward
    main.o(.text.passDownAuto) refers to main.o(.bss.upperLimitReached) for upperLimitReached
    main.o(.text.passDownAuto) refers to main.o(.bss.xDriverUpButtonMutex) for xDriverUpButtonMutex
    main.o(.text.passDownAuto) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.passDownAuto) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.passDownAuto) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.passDownAuto) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    main.o(.text.passDownAuto) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    main.o(.text.passDownAuto) refers to main.o(.bss.xTaskHandlePassed) for xTaskHandlePassed
    main.o(.text.passDownAuto) refers to main.o(.bss.xQueue) for xQueue
    main.o(.text.passDownAuto) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.passDownAuto) refers to main.o(.bss.xdrivUpManuHandle) for xdrivUpManuHandle
    main.o(.text.passDownAuto) refers to main.o(.text.drivUpManu) for drivUpManu
    main.o(.text.passDownAuto) refers to main.o(.rodata.str1.1) for .L.str.5
    main.o(.text.passDownAuto) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.passDownAuto) refers to main.o(.bss.xdrivUpAutoHandle) for xdrivUpAutoHandle
    main.o(.text.passDownAuto) refers to main.o(.text.drivUpAuto) for drivUpAuto
    main.o(.text.passDownAuto) refers to main.o(.bss.xDriverDownButtonMutex) for xDriverDownButtonMutex
    main.o(.text.passDownAuto) refers to main.o(.bss.xdrivDownManuHandle) for xdrivDownManuHandle
    main.o(.text.passDownAuto) refers to main.o(.text.drivDownManu) for drivDownManu
    main.o(.text.passDownAuto) refers to main.o(.bss.xdrivDownAutoHandle) for xdrivDownAutoHandle
    main.o(.text.passDownAuto) refers to main.o(.text.drivDownAuto) for drivDownAuto
    main.o(.text.passDownAuto) refers to motor.o(.text.motor_stop) for motor_stop
    main.o(.text.passDownAuto) refers to lcd.o(.text.LCD_PrintLn) for LCD_PrintLn
    main.o(.text.passDownAuto) refers to main.o(.bss.xpassDownAutoHandle) for xpassDownAutoHandle
    main.o(.text.passDownAuto) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    main.o(.text.passDownAuto) refers to motor.o(.text.motor_forward) for motor_forward
    main.o(.ARM.exidx.text.passDownAuto) refers to main.o(.text.passDownAuto) for [Anonymous Symbol]
    main.o(.text.vlcdWrite) refers to lcd.o(.text.LCD_PrintLn) for LCD_PrintLn
    main.o(.ARM.exidx.text.vlcdWrite) refers to main.o(.text.vlcdWrite) for [Anonymous Symbol]
    main.o(.text.PortE_ISR_Handler) refers to gpio.o(i.GPIOIntStatus) for GPIOIntStatus
    main.o(.text.PortE_ISR_Handler) refers to main.o(.bss.xupperLimitReachedSemaphore) for xupperLimitReachedSemaphore
    main.o(.text.PortE_ISR_Handler) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    main.o(.text.PortE_ISR_Handler) refers to main.o(.bss.xlowerLimitReachedSemaphore) for xlowerLimitReachedSemaphore
    main.o(.text.PortE_ISR_Handler) refers to main.o(.bss.xwindowLockSemaphore) for xwindowLockSemaphore
    main.o(.text.PortE_ISR_Handler) refers to main.o(.bss.xjamDetectedSemaphore) for xjamDetectedSemaphore
    main.o(.text.PortE_ISR_Handler) refers to gpio.o(i.GPIOIntClear) for GPIOIntClear
    main.o(.ARM.exidx.text.PortE_ISR_Handler) refers to main.o(.text.PortE_ISR_Handler) for [Anonymous Symbol]
    main.o(.text.portCinit) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    main.o(.text.portCinit) refers to gpio.o(i.GPIOPinTypeGPIOInput) for GPIOPinTypeGPIOInput
    main.o(.text.portCinit) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.portCinit) refers to main.o(.text.portCinit) for [Anonymous Symbol]
    main.o(.text.portEinit) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    main.o(.text.portEinit) refers to gpio.o(i.GPIOPinTypeGPIOInput) for GPIOPinTypeGPIOInput
    main.o(.text.portEinit) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.text.portEinit) refers to gpio.o(i.GPIOIntTypeSet) for GPIOIntTypeSet
    main.o(.text.portEinit) refers to gpio.o(i.GPIOIntEnable) for GPIOIntEnable
    main.o(.text.portEinit) refers to main.o(.text.PortE_ISR_Handler) for PortE_ISR_Handler
    main.o(.text.portEinit) refers to interrupt.o(i.IntRegister) for IntRegister
    main.o(.text.portEinit) refers to interrupt.o(i.IntPrioritySet) for IntPrioritySet
    main.o(.text.portEinit) refers to interrupt.o(i.IntEnable) for IntEnable
    main.o(.text.portEinit) refers to interrupt.o(i.IntMasterEnable) for IntMasterEnable
    main.o(.ARM.exidx.text.portEinit) refers to main.o(.text.portEinit) for [Anonymous Symbol]
    main.o(.data.pctextforlcd1) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.data.pctextforlcd2) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.data.pctextforlcd3) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.data.pctextforlcd4) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.data.pctextforlcd5) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.data.pctextforlcd6) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.data.pctextforlcd7) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.data.pctextforlcd8) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    lcd.o(.text.LCD_init) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    lcd.o(.text.LCD_init) refers to gpio.o(i.GPIOPinTypeGPIOOutput) for GPIOPinTypeGPIOOutput
    lcd.o(.text.LCD_init) refers to sysctl.o(.emb_text) for SysCtlDelay
    lcd.o(.text.LCD_init) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    lcd.o(.text.LCD_init) refers to lcd.o(.text.LCD_Command) for LCD_Command
    lcd.o(.text.LCD_init) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    lcd.o(.ARM.exidx.text.LCD_init) refers to lcd.o(.text.LCD_init) for [Anonymous Symbol]
    lcd.o(.text.LCD_Command) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    lcd.o(.text.LCD_Command) refers to sysctl.o(.emb_text) for SysCtlDelay
    lcd.o(.ARM.exidx.text.LCD_Command) refers to lcd.o(.text.LCD_Command) for [Anonymous Symbol]
    lcd.o(.text.LCD_Clear) refers to lcd.o(.text.LCD_Command) for LCD_Command
    lcd.o(.text.LCD_Clear) refers to sysctl.o(.emb_text) for SysCtlDelay
    lcd.o(.ARM.exidx.text.LCD_Clear) refers to lcd.o(.text.LCD_Clear) for [Anonymous Symbol]
    lcd.o(.text.LCD_Show) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    lcd.o(.text.LCD_Show) refers to sysctl.o(.emb_text) for SysCtlDelay
    lcd.o(.ARM.exidx.text.LCD_Show) refers to lcd.o(.text.LCD_Show) for [Anonymous Symbol]
    lcd.o(.text.LCD_Cursor) refers to lcd.o(.text.LCD_Command) for LCD_Command
    lcd.o(.ARM.exidx.text.LCD_Cursor) refers to lcd.o(.text.LCD_Cursor) for [Anonymous Symbol]
    lcd.o(.text.LCD_PrintJustify) refers to strlen.o(.text) for strlen
    lcd.o(.text.LCD_PrintJustify) refers to lcd.o(.text.LCD_Cursor) for LCD_Cursor
    lcd.o(.text.LCD_PrintJustify) refers to lcd.o(.text.LCD_Show) for LCD_Show
    lcd.o(.text.LCD_PrintJustify) refers to lcd.o(.text.LCD_Command) for LCD_Command
    lcd.o(.ARM.exidx.text.LCD_PrintJustify) refers to lcd.o(.text.LCD_PrintJustify) for [Anonymous Symbol]
    lcd.o(.text.LCD_Print) refers to strlen.o(.text) for strlen
    lcd.o(.text.LCD_Print) refers to lcd.o(.text.LCD_Cursor) for LCD_Cursor
    lcd.o(.text.LCD_Print) refers to lcd.o(.text.LCD_Show) for LCD_Show
    lcd.o(.text.LCD_Print) refers to lcd.o(.text.LCD_Command) for LCD_Command
    lcd.o(.ARM.exidx.text.LCD_Print) refers to lcd.o(.text.LCD_Print) for [Anonymous Symbol]
    lcd.o(.text.LCD_PrintLn) refers to lcd.o(.text.LCD_Cursor) for LCD_Cursor
    lcd.o(.text.LCD_PrintLn) refers to strlen.o(.text) for strlen
    lcd.o(.text.LCD_PrintLn) refers to lcd.o(.text.LCD_Show) for LCD_Show
    lcd.o(.text.LCD_PrintLn) refers to lcd.o(.text.LCD_Command) for LCD_Command
    lcd.o(.ARM.exidx.text.LCD_PrintLn) refers to lcd.o(.text.LCD_PrintLn) for [Anonymous Symbol]
    lcd.o(.text.LCD_Yaz) refers to strlen.o(.text) for strlen
    lcd.o(.text.LCD_Yaz) refers to lcd.o(.text.LCD_Cursor) for LCD_Cursor
    lcd.o(.text.LCD_Yaz) refers to lcd.o(.text.LCD_Show) for LCD_Show
    lcd.o(.text.LCD_Yaz) refers to sysctl.o(.emb_text) for SysCtlDelay
    lcd.o(.text.LCD_Yaz) refers to lcd.o(.text.LCD_Command) for LCD_Command
    lcd.o(.ARM.exidx.text.LCD_Yaz) refers to lcd.o(.text.LCD_Yaz) for [Anonymous Symbol]
    motor.o(.text.motorinit) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    motor.o(.text.motorinit) refers to gpio.o(i.GPIOPinTypeGPIOOutput) for GPIOPinTypeGPIOOutput
    motor.o(.ARM.exidx.text.motorinit) refers to motor.o(.text.motorinit) for [Anonymous Symbol]
    motor.o(.text.motor_forward) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    motor.o(.ARM.exidx.text.motor_forward) refers to motor.o(.text.motor_forward) for [Anonymous Symbol]
    motor.o(.text.motor_backward) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    motor.o(.ARM.exidx.text.motor_backward) refers to motor.o(.text.motor_backward) for [Anonymous Symbol]
    motor.o(.text.motor_stop) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    motor.o(.ARM.exidx.text.motor_stop) refers to motor.o(.text.motor_stop) for [Anonymous Symbol]
    startup_tm4c123.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to __main.o(!!!main) for __main
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(HEAP) for Heap_Mem
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(STACK) for Stack_Mem
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.getOscClk) for getOscClk
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.getOscClk) refers to system_tm4c123.o(.text.getOscClk) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_2.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.bss.pvPortMalloc.xHeapHasBeenInitialised) for pvPortMalloc.xHeapHasBeenInitialised
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.text.prvHeapInit) for prvHeapInit
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.data.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.bss.xStart) for xStart
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.bss.xEnd) for xEnd
    heap_2.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_2.o(.ARM.exidx.text.pvPortMalloc) refers to heap_2.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_2.o(.text.prvHeapInit) refers to heap_2.o(.bss.ucHeap) for ucHeap
    heap_2.o(.text.prvHeapInit) refers to heap_2.o(.bss.xStart) for xStart
    heap_2.o(.text.prvHeapInit) refers to heap_2.o(.bss.xEnd) for xEnd
    heap_2.o(.ARM.exidx.text.prvHeapInit) refers to heap_2.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_2.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_2.o(.text.vPortFree) refers to heap_2.o(.bss.xStart) for xStart
    heap_2.o(.text.vPortFree) refers to heap_2.o(.data.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_2.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_2.o(.ARM.exidx.text.vPortFree) refers to heap_2.o(.text.vPortFree) for [Anonymous Symbol]
    heap_2.o(.text.xPortGetFreeHeapSize) refers to heap_2.o(.data.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_2.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_2.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_2.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_2.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_2.o(.text.pvPortCalloc) refers to heap_2.o(.text.pvPortMalloc) for pvPortMalloc
    heap_2.o(.text.pvPortCalloc) refers to rt_memclr.o(.text) for __aeabi_memclr
    heap_2.o(.ARM.exidx.text.pvPortCalloc) refers to heap_2.o(.text.pvPortCalloc) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_2.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_2.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_2.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreate) refers to heap_2.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_2.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.rodata.str1.1) for .L.str
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_2.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for xTimerGetReloadMode
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessReceivedCommands) refers to heap_2.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvReloadTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.ARM.exidx.text.prvReloadTimer) refers to timers.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    gpio.o(i.GPIOIntRegister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntRegisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntUnregister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOIntUnregisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOPinConfigure) refers to gpio.o(.constdata) for .constdata
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i._GPIOIntNumberGet) refers to gpio.o(.constdata) for .constdata
    interrupt.o(i.IntDisable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntEnable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntIsEnabled) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntMasterDisable) refers to cpu.o(.emb_text) for CPUcpsid
    interrupt.o(i.IntMasterEnable) refers to cpu.o(.emb_text) for CPUcpsie
    interrupt.o(i.IntPendClear) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPendSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityMaskGet) refers to cpu.o(.emb_text) for CPUbasepriGet
    interrupt.o(i.IntPriorityMaskSet) refers to cpu.o(.emb_text) for CPUbasepriSet
    interrupt.o(i.IntPrioritySet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntRegister) refers to interrupt.o(vtable) for vtable
    interrupt.o(i.IntUnregister) refers to interrupt.o(i._IntDefaultHandler) for _IntDefaultHandler
    interrupt.o(i.IntUnregister) refers to interrupt.o(vtable) for vtable
    sysctl.o(i.SysCtlClockFreqSet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockGet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockSet) refers to sysctl.o(.emb_text) for SysCtlDelay
    sysctl.o(i.SysCtlDeepSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    sysctl.o(i.SysCtlSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlVCOGet) refers to sysctl.o(.constdata) for .constdata
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_tm4c123.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.setUpperLimit), (8 bytes).
    Removing main.o(.ARM.exidx.text.setLowerLimit), (8 bytes).
    Removing main.o(.ARM.exidx.text.setWindowLock), (8 bytes).
    Removing main.o(.ARM.exidx.text.setJamDetected), (8 bytes).
    Removing main.o(.ARM.exidx.text.buttonTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.drivUpManu), (8 bytes).
    Removing main.o(.ARM.exidx.text.drivUpAuto), (8 bytes).
    Removing main.o(.ARM.exidx.text.drivDownManu), (8 bytes).
    Removing main.o(.ARM.exidx.text.drivDownAuto), (8 bytes).
    Removing main.o(.ARM.exidx.text.passUpManu), (8 bytes).
    Removing main.o(.ARM.exidx.text.passUpAuto), (8 bytes).
    Removing main.o(.ARM.exidx.text.passDownManu), (8 bytes).
    Removing main.o(.ARM.exidx.text.passDownAuto), (8 bytes).
    Removing main.o(.ARM.exidx.text.vlcdWrite), (8 bytes).
    Removing main.o(.ARM.exidx.text.PortE_ISR_Handler), (8 bytes).
    Removing main.o(.ARM.exidx.text.portCinit), (8 bytes).
    Removing main.o(.ARM.exidx.text.portEinit), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing lcd.o(.text), (0 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_init), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Command), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Clear), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Show), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Cursor), (8 bytes).
    Removing lcd.o(.text.LCD_PrintJustify), (346 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_PrintJustify), (8 bytes).
    Removing lcd.o(.text.LCD_Print), (126 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Print), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_PrintLn), (8 bytes).
    Removing lcd.o(.text.LCD_Yaz), (382 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Yaz), (8 bytes).
    Removing motor.o(.text), (0 bytes).
    Removing motor.o(.ARM.exidx.text.motorinit), (8 bytes).
    Removing motor.o(.ARM.exidx.text.motor_forward), (8 bytes).
    Removing motor.o(.ARM.exidx.text.motor_backward), (8 bytes).
    Removing motor.o(.ARM.exidx.text.motor_stop), (8 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (326 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.text.getOscClk), (360 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.getOscClk), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (46 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_2.o(.text), (0 bytes).
    Removing heap_2.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_2.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_2.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_2.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_2.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_2.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_2.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_2.o(.text.pvPortCalloc), (92 bytes).
    Removing heap_2.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (108 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (110 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (94 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (444 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (480 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (318 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (212 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (54 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (62 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (48 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (48 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (62 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (68 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing queue.o(.text.xQueueCreateSet), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.text.xQueueAddToSet), (64 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.text.xQueueRemoveFromSet), (72 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSet), (28 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSetFromISR), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (278 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (90 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (484 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (378 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (264 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (106 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (304 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (70 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (156 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (356 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (74 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (248 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (280 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (554 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (668 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (498 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (120 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (74 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (110 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (176 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (52 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (44 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (90 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (78 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (16 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (48 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (44 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (76 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (58 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (58 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).
    Removing gpio.o(i.GPIOADCTriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIOADCTriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODMATriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIODMATriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODirModeGet), (34 bytes).
    Removing gpio.o(i.GPIOIntDisable), (14 bytes).
    Removing gpio.o(i.GPIOIntRegister), (26 bytes).
    Removing gpio.o(i.GPIOIntRegisterPin), (30 bytes).
    Removing gpio.o(i.GPIOIntTypeGet), (70 bytes).
    Removing gpio.o(i.GPIOIntUnregister), (22 bytes).
    Removing gpio.o(i.GPIOIntUnregisterPin), (26 bytes).
    Removing gpio.o(i.GPIOPadConfigGet), (248 bytes).
    Removing gpio.o(i.GPIOPinConfigure), (68 bytes).
    Removing gpio.o(i.GPIOPinTypeADC), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeCAN), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparator), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparatorOutput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeDIVSCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEPI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetLED), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetMII), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOOutputOD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeHibernateRTCCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeI2C), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeI2CSCL), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeLCD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeOneWire), (28 bytes).
    Removing gpio.o(i.GPIOPinTypePWM), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeQEI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeSSI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTimer), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTrace), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUART), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBAnalog), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBDigital), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeHigh), (30 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeLow), (30 bytes).
    Removing gpio.o(i.GPIOPinWakeStatus), (6 bytes).
    Removing gpio.o(i.GPIOUnlockPin), (24 bytes).
    Removing gpio.o(i._GPIOIntNumberGet), (80 bytes).
    Removing gpio.o(.constdata), (552 bytes).
    Removing interrupt.o(i.IntDisable), (100 bytes).
    Removing interrupt.o(i.IntIsEnabled), (96 bytes).
    Removing interrupt.o(i.IntMasterDisable), (14 bytes).
    Removing interrupt.o(i.IntPendClear), (68 bytes).
    Removing interrupt.o(i.IntPendSet), (84 bytes).
    Removing interrupt.o(i.IntPriorityGet), (28 bytes).
    Removing interrupt.o(i.IntPriorityGroupingGet), (36 bytes).
    Removing interrupt.o(i.IntPriorityGroupingSet), (28 bytes).
    Removing interrupt.o(i.IntPriorityMaskGet), (4 bytes).
    Removing interrupt.o(i.IntPriorityMaskSet), (4 bytes).
    Removing interrupt.o(i.IntTrigger), (12 bytes).
    Removing interrupt.o(i.IntUnregister), (20 bytes).
    Removing interrupt.o(i._IntDefaultHandler), (2 bytes).
    Removing sysctl.o(i.SysCtlAltClkConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlClockFreqSet), (740 bytes).
    Removing sysctl.o(i.SysCtlClockGet), (340 bytes).
    Removing sysctl.o(i.SysCtlClockOutConfig), (20 bytes).
    Removing sysctl.o(i.SysCtlClockSet), (288 bytes).
    Removing sysctl.o(i.SysCtlDeepSleep), (32 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockConfigSet), (112 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockSet), (12 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlFlashSectorSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlFlashSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBDisable), (28 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBEnable), (24 bytes).
    Removing sysctl.o(i.SysCtlIntClear), (12 bytes).
    Removing sysctl.o(i.SysCtlIntDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntRegister), (20 bytes).
    Removing sysctl.o(i.SysCtlIntStatus), (16 bytes).
    Removing sysctl.o(i.SysCtlIntUnregister), (18 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlMOSCConfigSet), (12 bytes).
    Removing sysctl.o(i.SysCtlNMIClear), (16 bytes).
    Removing sysctl.o(i.SysCtlNMIStatus), (12 bytes).
    Removing sysctl.o(i.SysCtlPIOSCCalibrate), (76 bytes).
    Removing sysctl.o(i.SysCtlPWMClockGet), (24 bytes).
    Removing sysctl.o(i.SysCtlPWMClockSet), (20 bytes).
    Removing sysctl.o(i.SysCtlPeripheralClockGating), (68 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOff), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOn), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPresent), (44 bytes).
    Removing sysctl.o(i.SysCtlPeripheralReady), (44 bytes).
    Removing sysctl.o(i.SysCtlPeripheralReset), (60 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlReset), (16 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorGet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorSet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetCauseClear), (16 bytes).
    Removing sysctl.o(i.SysCtlResetCauseGet), (12 bytes).
    Removing sysctl.o(i.SysCtlSRAMSizeGet), (16 bytes).
    Removing sysctl.o(i.SysCtlSleep), (4 bytes).
    Removing sysctl.o(i.SysCtlSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlVCOGet), (120 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventClear), (16 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventStatus), (12 bytes).
    Removing sysctl.o(.constdata), (596 bytes).

356 unused section(s) (total 17680 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/dczerorl.s                 0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    heap_2.c                                 0x00000000   Number         0  heap_2.o ABSOLUTE
    interrupt.c                              0x00000000   Number         0  interrupt.o ABSOLUTE
    lcd.c                                    0x00000000   Number         0  lcd.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    motor.c                                  0x00000000   Number         0  motor.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    !!!main                                  0x0000026c   Section        8  __main.o(!!!main)
    !!!scatter                               0x00000274   Section       52  __scatter.o(!!!scatter)
    !!dczerorl                               0x000002a8   Section       58  __dczerorl.o(!!dczerorl)
    !!handler_zi                             0x000002e4   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x00000300   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x00000302   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x00000306   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x00000308   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0000030a   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x0000030c   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0000030c   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x0000030c   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x00000312   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x00000312   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x00000316   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x00000316   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0000031e   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000320   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000320   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000324   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x0000032c   Number         0  sysctl.o(.emb_text)
    .emb_text                                0x0000032c   Section        6  sysctl.o(.emb_text)
    $v0                                      0x00000334   Number         0  cpu.o(.emb_text)
    .emb_text                                0x00000334   Section       38  cpu.o(.emb_text)
    $v0                                      0x0000035c   Number         0  startup_tm4c123.o(.text)
    .text                                    0x0000035c   Section      276  startup_tm4c123.o(.text)
    .text                                    0x00000470   Section        0  strlen.o(.text)
    .text                                    0x000004ae   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x00000538   Section       68  rt_memclr.o(.text)
    .text                                    0x0000057c   Section        0  heapauxi.o(.text)
    .text                                    0x00000582   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x000005e6   Section       78  rt_memclr_w.o(.text)
    .text                                    0x00000634   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x0000067e   Section        0  exit.o(.text)
    .text                                    0x00000690   Section        8  libspace.o(.text)
    .text                                    0x00000698   Section        0  sys_exit.o(.text)
    .text                                    0x000006a4   Section        2  use_no_semi.o(.text)
    .text                                    0x000006a6   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x000006a8   Section        0  lcd.o(.text.LCD_Clear)
    [Anonymous Symbol]                       0x000006b8   Section        0  lcd.o(.text.LCD_Command)
    [Anonymous Symbol]                       0x00000750   Section        0  lcd.o(.text.LCD_Cursor)
    [Anonymous Symbol]                       0x00000788   Section        0  lcd.o(.text.LCD_PrintLn)
    [Anonymous Symbol]                       0x000007e0   Section        0  lcd.o(.text.LCD_Show)
    [Anonymous Symbol]                       0x00000878   Section        0  lcd.o(.text.LCD_init)
    [Anonymous Symbol]                       0x00000970   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x000009d0   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x000009d4   Section        0  main.o(.text.PortE_ISR_Handler)
    [Anonymous Symbol]                       0x00000aa0   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x00000ac0   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00000ac4   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00000b00   Section        0  system_tm4c123.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00000c0c   Section        0  main.o(.text.buttonTask)
    [Anonymous Symbol]                       0x000010c8   Section        0  main.o(.text.drivDownAuto)
    [Anonymous Symbol]                       0x00001238   Section        0  main.o(.text.drivDownManu)
    [Anonymous Symbol]                       0x000013f8   Section        0  main.o(.text.drivUpAuto)
    [Anonymous Symbol]                       0x00001568   Section        0  main.o(.text.drivUpManu)
    [Anonymous Symbol]                       0x00001728   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x0000188c   Section        0  motor.o(.text.motor_backward)
    [Anonymous Symbol]                       0x000018ac   Section        0  motor.o(.text.motor_forward)
    [Anonymous Symbol]                       0x000018cc   Section        0  motor.o(.text.motor_stop)
    [Anonymous Symbol]                       0x000018dc   Section        0  motor.o(.text.motorinit)
    [Anonymous Symbol]                       0x000018f8   Section        0  main.o(.text.passDownAuto)
    [Anonymous Symbol]                       0x00001dc0   Section        0  main.o(.text.passDownManu)
    [Anonymous Symbol]                       0x000022d8   Section        0  main.o(.text.passUpAuto)
    [Anonymous Symbol]                       0x000027a0   Section        0  main.o(.text.passUpManu)
    [Anonymous Symbol]                       0x00002cb8   Section        0  main.o(.text.portCinit)
    [Anonymous Symbol]                       0x00002cec   Section        0  main.o(.text.portEinit)
    prvAddCurrentTaskToDelayedList           0x00002d55   Thumb Code   282  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x00002d54   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x00002e71   Thumb Code   334  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x00002e70   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x00002fc1   Thumb Code   106  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x00002fc0   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x0000302d   Thumb Code    90  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x0000302c   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x00003089   Thumb Code    66  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x00003088   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x000030cd   Thumb Code   204  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x000030cc   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x00003199   Thumb Code    24  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x00003198   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetDisinheritPriorityAfterTimeout     0x000031b1   Thumb Code    38  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x000031b0   Section        0  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvGetNextExpireTime                     0x000031d9   Thumb Code    64  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x000031d8   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvHeapInit                              0x00003219   Thumb Code    66  heap_2.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x00003218   Section        0  heap_2.o(.text.prvHeapInit)
    prvIdleTask                              0x0000325d   Thumb Code    56  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x0000325c   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseMutex                       0x00003295   Thumb Code    44  queue.o(.text.prvInitialiseMutex)
    [Anonymous Symbol]                       0x00003294   Section        0  queue.o(.text.prvInitialiseMutex)
    prvInitialiseNewQueue                    0x000032c1   Thumb Code    68  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x000032c0   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x00003305   Thumb Code   278  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x00003304   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x0000341d   Thumb Code   142  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x0000341c   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertTimerInActiveList               0x000034ad   Thumb Code   134  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x000034ac   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x00003535   Thumb Code    40  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x00003534   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x0000355d   Thumb Code    46  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x0000355c   Section        0  queue.o(.text.prvIsQueueFull)
    prvNotifyQueueSetContainer               0x0000358d   Thumb Code   236  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x0000358c   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvPortStartFirstTask                    0x00003679   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x00003678   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x000036a1   Thumb Code    84  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x000036a0   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x000036f5   Thumb Code   326  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x000036f4   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x0000383d   Thumb Code   154  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x0000383c   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvReloadTimer                           0x000038d9   Thumb Code    52  timers.o(.text.prvReloadTimer)
    [Anonymous Symbol]                       0x000038d8   Section        0  timers.o(.text.prvReloadTimer)
    prvResetNextTaskUnblockTime              0x0000390d   Thumb Code    60  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x0000390c   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x00003949   Thumb Code    68  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x00003948   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x0000398d   Thumb Code    82  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x0000398c   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x000039e1   Thumb Code    76  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x000039e0   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x00003a2d   Thumb Code    30  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x00003a2c   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x00003a4d   Thumb Code   204  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00003a4c   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00003b18   Section        0  heap_2.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x00003c94   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x00003cc0   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x00003d20   Section        0  main.o(.text.setJamDetected)
    [Anonymous Symbol]                       0x00003d58   Section        0  main.o(.text.setLowerLimit)
    [Anonymous Symbol]                       0x00003d90   Section        0  main.o(.text.setUpperLimit)
    [Anonymous Symbol]                       0x00003dc8   Section        0  main.o(.text.setWindowLock)
    [Anonymous Symbol]                       0x00003e20   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x00003e68   Section        0  tasks.o(.text.uxTaskGetNumberOfTasks)
    [Anonymous Symbol]                       0x00003e74   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x00003ea4   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00003eb4   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x00003f20   Section        0  list.o(.text.vListInsertEnd)
    vPortEnableVFP                           0x00003f5d   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00003f5c   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00003f70   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x00003fc8   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x00004014   Section        0  heap_2.o(.text.vPortFree)
    [Anonymous Symbol]                       0x000040f0   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x00004134   Section        0  port.o(.text.vPortValidateInterruptPriority)
    [Anonymous Symbol]                       0x000041b8   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x0000421c   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x0000428c   Section        0  tasks.o(.text.vTaskDelete)
    [Anonymous Symbol]                       0x000043e0   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x00004404   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x00004414   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x00004458   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x000044d4   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x00004658   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x0000470c   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x0000471c   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x0000471c   Section        0  tasks.o(.text.vTaskSwitchContext)
    vlcdWrite                                0x000047dd   Thumb Code    22  main.o(.text.vlcdWrite)
    [Anonymous Symbol]                       0x000047dc   Section        0  main.o(.text.vlcdWrite)
    [Anonymous Symbol]                       0x000047f4   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x00004970   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x00004998   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x00004a34   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x00004b3c   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x00004db0   Section        0  queue.o(.text.xQueueGiveFromISR)
    [Anonymous Symbol]                       0x00004f34   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x00005110   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x00005320   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x000053f4   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x00005494   Section        0  tasks.o(.text.xTaskGetCurrentTaskHandle)
    [Anonymous Symbol]                       0x000054a8   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x000054e0   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x000054f4   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x00005754   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x0000588c   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x000059e8   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x00005b74   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x00005d98   Section        0  timers.o(.text.xTimerCreateTimerTask)
    i.GPIODirModeSet                         0x00005e04   Section        0  gpio.o(i.GPIODirModeSet)
    i.GPIOIntClear                           0x00005e2c   Section        0  gpio.o(i.GPIOIntClear)
    i.GPIOIntEnable                          0x00005e32   Section        0  gpio.o(i.GPIOIntEnable)
    i.GPIOIntStatus                          0x00005e3e   Section        0  gpio.o(i.GPIOIntStatus)
    i.GPIOIntTypeSet                         0x00005e4c   Section        0  gpio.o(i.GPIOIntTypeSet)
    i.GPIOPadConfigSet                       0x00005e9c   Section        0  gpio.o(i.GPIOPadConfigSet)
    i.GPIOPinRead                            0x0000600c   Section        0  gpio.o(i.GPIOPinRead)
    i.GPIOPinTypeGPIOInput                   0x00006012   Section        0  gpio.o(i.GPIOPinTypeGPIOInput)
    i.GPIOPinTypeGPIOOutput                  0x0000602e   Section        0  gpio.o(i.GPIOPinTypeGPIOOutput)
    i.GPIOPinWrite                           0x0000604a   Section        0  gpio.o(i.GPIOPinWrite)
    i.IntEnable                              0x00006050   Section        0  interrupt.o(i.IntEnable)
    i.IntMasterEnable                        0x000060b4   Section        0  interrupt.o(i.IntMasterEnable)
    i.IntPrioritySet                         0x000060c4   Section        0  interrupt.o(i.IntPrioritySet)
    i.IntRegister                            0x000060ec   Section        0  interrupt.o(i.IntRegister)
    i.SysCtlPeripheralEnable                 0x00006120   Section        0  sysctl.o(i.SysCtlPeripheralEnable)
    $v0                                      0x00006148   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x00006148   Section       26  fpinit.o(x$fpl$fpinit)
    g_pui32Priority                          0x00006164   Data          32  interrupt.o(.constdata)
    .constdata                               0x00006164   Section      268  interrupt.o(.constdata)
    g_pui32Regs                              0x00006184   Data         156  interrupt.o(.constdata)
    g_pui32EnRegs                            0x00006220   Data          20  interrupt.o(.constdata)
    g_pui32Dii16Regs                         0x00006234   Data          20  interrupt.o(.constdata)
    g_pui32PendRegs                          0x00006248   Data          20  interrupt.o(.constdata)
    g_pui32UnpendRegs                        0x0000625c   Data          20  interrupt.o(.constdata)
    .L.str.14                                0x00006270   Data          13  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00006270   Section        0  main.o(.rodata.str1.1)
    .L.str.3                                 0x0000627d   Data          15  main.o(.rodata.str1.1)
    .L.str.16                                0x0000628c   Data          15  main.o(.rodata.str1.1)
    .L.str.13                                0x0000629b   Data          12  main.o(.rodata.str1.1)
    .L.str.2                                 0x000062a7   Data          14  main.o(.rodata.str1.1)
    .L.str.4                                 0x000062b5   Data          12  main.o(.rodata.str1.1)
    .L.str.8                                 0x000062c1   Data          15  main.o(.rodata.str1.1)
    .L.str.11                                0x000062d0   Data          13  main.o(.rodata.str1.1)
    .L.str.6                                 0x000062dd   Data          13  main.o(.rodata.str1.1)
    .L.str.10                                0x000062ea   Data          11  main.o(.rodata.str1.1)
    .L.str                                   0x00006331   Data           9  main.o(.rodata.str1.1)
    .L.str.1                                 0x0000633a   Data           9  main.o(.rodata.str1.1)
    .L.str.15                                0x00006343   Data          12  main.o(.rodata.str1.1)
    .L.str.17                                0x0000634f   Data          12  main.o(.rodata.str1.1)
    .L.str.7                                 0x0000635b   Data          15  main.o(.rodata.str1.1)
    .L.str.12                                0x0000636a   Data          13  main.o(.rodata.str1.1)
    .L.str.5                                 0x00006377   Data          13  main.o(.rodata.str1.1)
    .L.str.9                                 0x00006384   Data          11  main.o(.rodata.str1.1)
    .L.str                                   0x000063cb   Data           5  tasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x000063cb   Section        0  tasks.o(.rodata.str1.1)
    .L.str                                   0x000063d0   Data           8  timers.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x000063d0   Section        0  timers.o(.rodata.str1.1)
    pctextforlcd1                            0x20000004   Data           4  main.o(.data.pctextforlcd1)
    [Anonymous Symbol]                       0x20000004   Section        0  main.o(.data.pctextforlcd1)
    pctextforlcd2                            0x20000008   Data           4  main.o(.data.pctextforlcd2)
    [Anonymous Symbol]                       0x20000008   Section        0  main.o(.data.pctextforlcd2)
    pctextforlcd3                            0x2000000c   Data           4  main.o(.data.pctextforlcd3)
    [Anonymous Symbol]                       0x2000000c   Section        0  main.o(.data.pctextforlcd3)
    pctextforlcd4                            0x20000010   Data           4  main.o(.data.pctextforlcd4)
    [Anonymous Symbol]                       0x20000010   Section        0  main.o(.data.pctextforlcd4)
    pctextforlcd5                            0x20000014   Data           4  main.o(.data.pctextforlcd5)
    [Anonymous Symbol]                       0x20000014   Section        0  main.o(.data.pctextforlcd5)
    pctextforlcd6                            0x20000018   Data           4  main.o(.data.pctextforlcd6)
    [Anonymous Symbol]                       0x20000018   Section        0  main.o(.data.pctextforlcd6)
    pctextforlcd7                            0x2000001c   Data           4  main.o(.data.pctextforlcd7)
    [Anonymous Symbol]                       0x2000001c   Section        0  main.o(.data.pctextforlcd7)
    pctextforlcd8                            0x20000020   Data           4  main.o(.data.pctextforlcd8)
    [Anonymous Symbol]                       0x20000020   Section        0  main.o(.data.pctextforlcd8)
    uxCriticalNesting                        0x20000024   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000024   Section        0  port.o(.data.uxCriticalNesting)
    xFreeBytesRemaining                      0x20000028   Data           4  heap_2.o(.data.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20000028   Section        0  heap_2.o(.data.xFreeBytesRemaining)
    g_pfnRAMVectors                          0x20000400   Data         620  interrupt.o(vtable)
    vtable                                   0x20000400   Section      620  interrupt.o(vtable)
    .bss                                     0x20000670   Section       96  libspace.o(.bss)
    jamDetected                              0x200006d0   Data           4  main.o(.bss.jamDetected)
    [Anonymous Symbol]                       0x200006d0   Section        0  main.o(.bss.jamDetected)
    lowerLimitReached                        0x200006d4   Data           1  main.o(.bss.lowerLimitReached)
    [Anonymous Symbol]                       0x200006d4   Section        0  main.o(.bss.lowerLimitReached)
    prvSampleTimeNow.xLastTime               0x200006d8   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x200006d8   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    pvPortMalloc.xHeapHasBeenInitialised     0x200006dc   Data           4  heap_2.o(.bss.pvPortMalloc.xHeapHasBeenInitialised)
    [Anonymous Symbol]                       0x200006dc   Section        0  heap_2.o(.bss.pvPortMalloc.xHeapHasBeenInitialised)
    __tagsym$$used.1                         0x200006e0   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxCurrentTimerList                       0x200006e4   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x200006e4   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x200006e8   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x200006e8   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxOverflowDelayedTaskList                0x200006ec   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x200006ec   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x200006f0   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x200006f0   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x200006f4   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x200006f4   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000758   Data        8192  heap_2.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000758   Section        0  heap_2.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x20002758   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x20002758   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x2000275c   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x2000275c   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    upperLimitReached                        0x20002760   Data           1  main.o(.bss.upperLimitReached)
    [Anonymous Symbol]                       0x20002760   Section        0  main.o(.bss.upperLimitReached)
    uxCurrentNumberOfTasks                   0x20002764   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20002764   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20002768   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20002768   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x2000276c   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x2000276c   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20002770   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20002770   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20002774   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20002774   Section        0  tasks.o(.bss.uxTopReadyPriority)
    windowLock                               0x20002778   Data           4  main.o(.bss.windowLock)
    [Anonymous Symbol]                       0x20002778   Section        0  main.o(.bss.windowLock)
    xActiveTimerList1                        0x2000277c   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x2000277c   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20002790   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20002790   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x200027a4   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x200027a4   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x200027b8   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x200027b8   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xEnd                                     0x200027d4   Data           8  heap_2.o(.bss.xEnd)
    [Anonymous Symbol]                       0x200027d4   Section        0  heap_2.o(.bss.xEnd)
    xIdleTaskHandle                          0x200027dc   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x200027dc   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xNextTaskUnblockTime                     0x200027e0   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x200027e0   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x200027e4   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x200027e4   Section        0  tasks.o(.bss.xNumOfOverflows)
    xPendedTicks                             0x200027e8   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x200027e8   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x200027ec   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x200027ec   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20002804   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20002804   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x20002808   Data           8  heap_2.o(.bss.xStart)
    [Anonymous Symbol]                       0x20002808   Section        0  heap_2.o(.bss.xStart)
    xSuspendedTaskList                       0x20002810   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002810   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20002828   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20002828   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x2000283c   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x2000283c   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20002840   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20002840   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20002844   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20002844   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20002848   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20002848   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x20002880   Data           0  startup_tm4c123.o(HEAP)
    Stack_Mem                                0x20002880   Data         512  startup_tm4c123.o(STACK)
    HEAP                                     0x20002880   Section        0  startup_tm4c123.o(HEAP)
    STACK                                    0x20002880   Section      512  startup_tm4c123.o(STACK)
    __initial_sp                             0x20002a80   Data           0  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x00000275   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000283   Thumb Code     0  __scatter.o(!!!scatter)
    __decompress                             0x000002a9   Thumb Code    58  __dczerorl.o(!!dczerorl)
    __decompress0                            0x000002a9   Thumb Code     0  __dczerorl.o(!!dczerorl)
    __scatterload_zeroinit                   0x000002e5   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x00000301   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x00000309   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x0000030d   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0000030d   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0000030d   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x00000313   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x00000313   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x00000317   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x00000317   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0000031f   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000321   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000321   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000325   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    SysCtlDelay                              0x0000032d   Thumb Code     6  sysctl.o(.emb_text)
    CPUcpsid                                 0x00000335   Thumb Code     8  cpu.o(.emb_text)
    CPUprimask                               0x0000033d   Thumb Code     6  cpu.o(.emb_text)
    CPUcpsie                                 0x00000343   Thumb Code     8  cpu.o(.emb_text)
    CPUwfi                                   0x0000034b   Thumb Code     4  cpu.o(.emb_text)
    CPUbasepriSet                            0x0000034f   Thumb Code     6  cpu.o(.emb_text)
    CPUbasepriGet                            0x00000355   Thumb Code     6  cpu.o(.emb_text)
    Reset_Handler                            0x0000035d   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x00000367   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x00000369   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x0000036b   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x0000036d   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOA_Handler                            0x00000377   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x00000379   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOC_Handler                            0x0000037b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x0000037d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOE_Handler                            0x0000037f   Thumb Code     2  startup_tm4c123.o(.text)
    UART0_Handler                            0x00000381   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x00000383   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x00000385   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x00000387   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x00000389   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x0000038b   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x0000038d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x0000038f   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x00000391   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x00000393   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x00000395   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x00000397   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x00000399   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x0000039b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x0000039d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x0000039f   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x000003a1   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x000003a3   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x000003a5   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x000003a7   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x000003a9   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x000003ab   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x000003ad   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x000003af   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x000003b1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOF_Handler                            0x000003b3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x000003b5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x000003b7   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x000003b9   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x000003bb   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x000003bd   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x000003bf   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x000003c1   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x000003c3   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x000003c5   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x000003c7   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x000003c9   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x000003cb   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x000003cd   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x000003cf   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x000003d1   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x000003d3   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x000003d5   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x000003d7   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x000003d9   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x000003db   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x000003dd   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x000003df   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x000003e1   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x000003e3   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x000003e5   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x000003e7   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x000003e9   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x000003eb   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x000003ed   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x000003ef   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x000003f1   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x000003f3   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x000003f5   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x000003f7   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x000003f9   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x000003fb   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x000003fd   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x000003ff   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x00000401   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x00000403   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x00000405   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x00000407   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x00000409   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x0000040b   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x0000040d   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x0000040f   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x00000411   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x00000413   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x00000415   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x00000417   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x00000419   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x0000041b   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x0000041d   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x0000041f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x00000421   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x00000423   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x00000425   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x00000427   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x00000429   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x0000042b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x0000042d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x0000042f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x00000431   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x00000433   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x00000435   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x00000437   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x00000439   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x0000043b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x0000043d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x0000043f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x00000441   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x00000443   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x00000445   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x00000447   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x00000449   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x0000044b   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x0000044d   Thumb Code     2  startup_tm4c123.o(.text)
    __user_initial_stackheap                 0x00000451   Thumb Code     0  startup_tm4c123.o(.text)
    strlen                                   0x00000471   Thumb Code    62  strlen.o(.text)
    __aeabi_memcpy                           0x000004af   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x000004af   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x00000515   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memclr                           0x00000539   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x00000539   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x0000053d   Thumb Code    64  rt_memclr.o(.text)
    __use_two_region_memory                  0x0000057d   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x0000057f   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x00000581   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x00000583   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x00000583   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x00000583   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x000005cb   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr4                          0x000005e7   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x000005e7   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x000005e7   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x000005eb   Thumb Code    74  rt_memclr_w.o(.text)
    __user_setup_stackheap                   0x00000635   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x0000067f   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x00000691   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x00000691   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x00000691   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x00000699   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x000006a5   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x000006a5   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x000006a7   Thumb Code     0  indicate_semi.o(.text)
    LCD_Clear                                0x000006a9   Thumb Code    16  lcd.o(.text.LCD_Clear)
    LCD_Command                              0x000006b9   Thumb Code   150  lcd.o(.text.LCD_Command)
    LCD_Cursor                               0x00000751   Thumb Code    56  lcd.o(.text.LCD_Cursor)
    LCD_PrintLn                              0x00000789   Thumb Code    88  lcd.o(.text.LCD_PrintLn)
    LCD_Show                                 0x000007e1   Thumb Code   152  lcd.o(.text.LCD_Show)
    LCD_init                                 0x00000879   Thumb Code   244  lcd.o(.text.LCD_init)
    PendSV_Handler                           0x00000971   Thumb Code   100  port.o(.text.PendSV_Handler)
    PortE_ISR_Handler                        0x000009d5   Thumb Code   196  main.o(.text.PortE_ISR_Handler)
    SVC_Handler                              0x00000aa1   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x00000ac5   Thumb Code    60  port.o(.text.SysTick_Handler)
    SystemInit                               0x00000b01   Thumb Code   268  system_tm4c123.o(.text.SystemInit)
    buttonTask                               0x00000c0d   Thumb Code  1212  main.o(.text.buttonTask)
    drivDownAuto                             0x000010c9   Thumb Code   368  main.o(.text.drivDownAuto)
    drivDownManu                             0x00001239   Thumb Code   448  main.o(.text.drivDownManu)
    drivUpAuto                               0x000013f9   Thumb Code   368  main.o(.text.drivUpAuto)
    drivUpManu                               0x00001569   Thumb Code   448  main.o(.text.drivUpManu)
    main                                     0x00001729   Thumb Code   354  main.o(.text.main)
    motor_backward                           0x0000188d   Thumb Code    32  motor.o(.text.motor_backward)
    motor_forward                            0x000018ad   Thumb Code    32  motor.o(.text.motor_forward)
    motor_stop                               0x000018cd   Thumb Code    16  motor.o(.text.motor_stop)
    motorinit                                0x000018dd   Thumb Code    26  motor.o(.text.motorinit)
    passDownAuto                             0x000018f9   Thumb Code  1224  main.o(.text.passDownAuto)
    passDownManu                             0x00001dc1   Thumb Code  1304  main.o(.text.passDownManu)
    passUpAuto                               0x000022d9   Thumb Code  1224  main.o(.text.passUpAuto)
    passUpManu                               0x000027a1   Thumb Code  1304  main.o(.text.passUpManu)
    portCinit                                0x00002cb9   Thumb Code    50  main.o(.text.portCinit)
    portEinit                                0x00002ced   Thumb Code   102  main.o(.text.portEinit)
    pvPortMalloc                             0x00003b19   Thumb Code   380  heap_2.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x00003c95   Thumb Code    44  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x00003cc1   Thumb Code    94  port.o(.text.pxPortInitialiseStack)
    setJamDetected                           0x00003d21   Thumb Code    56  main.o(.text.setJamDetected)
    setLowerLimit                            0x00003d59   Thumb Code    56  main.o(.text.setLowerLimit)
    setUpperLimit                            0x00003d91   Thumb Code    56  main.o(.text.setUpperLimit)
    setWindowLock                            0x00003dc9   Thumb Code    88  main.o(.text.setWindowLock)
    uxListRemove                             0x00003e21   Thumb Code    72  list.o(.text.uxListRemove)
    uxTaskGetNumberOfTasks                   0x00003e69   Thumb Code    12  tasks.o(.text.uxTaskGetNumberOfTasks)
    vListInitialise                          0x00003e75   Thumb Code    46  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x00003ea5   Thumb Code    14  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00003eb5   Thumb Code   106  list.o(.text.vListInsert)
    vListInsertEnd                           0x00003f21   Thumb Code    58  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x00003f71   Thumb Code    86  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x00003fc9   Thumb Code    74  port.o(.text.vPortExitCritical)
    vPortFree                                0x00004015   Thumb Code   218  heap_2.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x000040f1   Thumb Code    68  port.o(.text.vPortSetupTimerInterrupt)
    vPortValidateInterruptPriority           0x00004135   Thumb Code   132  port.o(.text.vPortValidateInterruptPriority)
    vQueueWaitForMessageRestricted           0x000041b9   Thumb Code   100  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x0000421d   Thumb Code   110  tasks.o(.text.vTaskDelay)
    vTaskDelete                              0x0000428d   Thumb Code   340  tasks.o(.text.vTaskDelete)
    vTaskInternalSetTimeOutState             0x000043e1   Thumb Code    36  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x00004405   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00004415   Thumb Code    66  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x00004459   Thumb Code   124  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPriorityDisinheritAfterTimeout      0x000044d5   Thumb Code   386  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskStartScheduler                      0x00004659   Thumb Code   178  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x0000470d   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x0000471d   Thumb Code   190  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x000047f5   Thumb Code   380  port.o(.text.xPortStartScheduler)
    xQueueCreateMutex                        0x00004971   Thumb Code    38  queue.o(.text.xQueueCreateMutex)
    xQueueGenericCreate                      0x00004999   Thumb Code   154  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x00004a35   Thumb Code   264  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x00004b3d   Thumb Code   628  queue.o(.text.xQueueGenericSend)
    xQueueGiveFromISR                        0x00004db1   Thumb Code   386  queue.o(.text.xQueueGiveFromISR)
    xQueueReceive                            0x00004f35   Thumb Code   476  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x00005111   Thumb Code   528  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x00005321   Thumb Code   210  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x000053f5   Thumb Code   160  tasks.o(.text.xTaskCreate)
    xTaskGetCurrentTaskHandle                0x00005495   Thumb Code    20  tasks.o(.text.xTaskGetCurrentTaskHandle)
    xTaskGetSchedulerState                   0x000054a9   Thumb Code    56  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x000054e1   Thumb Code    20  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x000054f5   Thumb Code   608  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00005755   Thumb Code   312  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x0000588d   Thumb Code   348  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x000059e9   Thumb Code   396  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00005b75   Thumb Code   546  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x00005d99   Thumb Code   108  timers.o(.text.xTimerCreateTimerTask)
    GPIODirModeSet                           0x00005e05   Thumb Code    40  gpio.o(i.GPIODirModeSet)
    GPIOIntClear                             0x00005e2d   Thumb Code     6  gpio.o(i.GPIOIntClear)
    GPIOIntEnable                            0x00005e33   Thumb Code    12  gpio.o(i.GPIOIntEnable)
    GPIOIntStatus                            0x00005e3f   Thumb Code    14  gpio.o(i.GPIOIntStatus)
    GPIOIntTypeSet                           0x00005e4d   Thumb Code    80  gpio.o(i.GPIOIntTypeSet)
    GPIOPadConfigSet                         0x00005e9d   Thumb Code   354  gpio.o(i.GPIOPadConfigSet)
    GPIOPinRead                              0x0000600d   Thumb Code     6  gpio.o(i.GPIOPinRead)
    GPIOPinTypeGPIOInput                     0x00006013   Thumb Code    28  gpio.o(i.GPIOPinTypeGPIOInput)
    GPIOPinTypeGPIOOutput                    0x0000602f   Thumb Code    28  gpio.o(i.GPIOPinTypeGPIOOutput)
    GPIOPinWrite                             0x0000604b   Thumb Code     6  gpio.o(i.GPIOPinWrite)
    IntEnable                                0x00006051   Thumb Code    92  interrupt.o(i.IntEnable)
    IntMasterEnable                          0x000060b5   Thumb Code    14  interrupt.o(i.IntMasterEnable)
    IntPrioritySet                           0x000060c5   Thumb Code    36  interrupt.o(i.IntPrioritySet)
    IntRegister                              0x000060ed   Thumb Code    44  interrupt.o(i.IntRegister)
    SysCtlPeripheralEnable                   0x00006121   Thumb Code    36  sysctl.o(i.SysCtlPeripheralEnable)
    _fp_init                                 0x00006149   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x00006161   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x00006161   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    uxTopUsedPriority                        0x000063d8   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x000063dc   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x000063fc   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    __libspace_start                         0x20000670   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x200006d0   Data           0  libspace.o(.bss)
    pxCurrentTCB                             0x200006e0   Data           4  tasks.o(.bss.pxCurrentTCB)
    xDriverDownButtonMutex                   0x200027cc   Data           4  main.o(.bss.xDriverDownButtonMutex)
    xDriverUpButtonMutex                     0x200027d0   Data           4  main.o(.bss.xDriverUpButtonMutex)
    xQueue                                   0x20002800   Data           4  main.o(.bss.xQueue)
    xTaskHandlePassed                        0x20002824   Data           4  main.o(.bss.xTaskHandlePassed)
    xdrivDownAutoHandle                      0x2000284c   Data           4  main.o(.bss.xdrivDownAutoHandle)
    xdrivDownManuHandle                      0x20002850   Data           4  main.o(.bss.xdrivDownManuHandle)
    xdrivUpAutoHandle                        0x20002854   Data           4  main.o(.bss.xdrivUpAutoHandle)
    xdrivUpManuHandle                        0x20002858   Data           4  main.o(.bss.xdrivUpManuHandle)
    xjamDetectedSemaphore                    0x2000285c   Data           4  main.o(.bss.xjamDetectedSemaphore)
    xlowerLimitReachedSemaphore              0x20002860   Data           4  main.o(.bss.xlowerLimitReachedSemaphore)
    xpassDownAutoHandle                      0x20002864   Data           4  main.o(.bss.xpassDownAutoHandle)
    xpassDownManuHandle                      0x20002868   Data           4  main.o(.bss.xpassDownManuHandle)
    xpassUpAutoHandle                        0x2000286c   Data           4  main.o(.bss.xpassUpAutoHandle)
    xpassUpManuHandle                        0x20002870   Data           4  main.o(.bss.xpassUpManuHandle)
    xupperLimitReachedSemaphore              0x20002874   Data           4  main.o(.bss.xupperLimitReachedSemaphore)
    xwindowLockSemaphore                     0x20002878   Data           4  main.o(.bss.xwindowLockSemaphore)



==============================================================================

Memory Map of the image

  Image Entry point : 0x0000035d

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00006a70, Max: 0x00040000, ABSOLUTE, COMPRESSED[0x00006430])

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x000063fc, Max: 0x00040000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO          116    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000008   Code   RO         1315  * !!!main             c_w.l(__main.o)
    0x00000274   0x00000274   0x00000034   Code   RO         1486    !!!scatter          c_w.l(__scatter.o)
    0x000002a8   0x000002a8   0x0000003a   Code   RO         1484    !!dczerorl          c_w.l(__dczerorl.o)
    0x000002e2   0x000002e2   0x00000002   PAD
    0x000002e4   0x000002e4   0x0000001c   Code   RO         1488    !!handler_zi        c_w.l(__scatter_zi.o)
    0x00000300   0x00000300   0x00000002   Code   RO         1346    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x00000302   0x00000302   0x00000004   Code   RO         1352    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1355    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1357    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1360    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1362    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1364    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1367    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1369    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1371    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1373    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1375    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1377    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1379    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1381    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1383    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1385    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1387    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1391    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1393    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1395    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1397    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000002   Code   RO         1398    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x00000308   0x00000308   0x00000002   Code   RO         1420    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1435    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1437    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1440    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1443    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1445    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1448    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000002   Code   RO         1449    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x0000030c   0x0000030c   0x00000000   Code   RO         1317    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x0000030c   0x0000030c   0x00000000   Code   RO         1323    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x0000030c   0x0000030c   0x00000006   Code   RO         1335    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x00000312   0x00000312   0x00000000   Code   RO         1325    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x00000312   0x00000312   0x00000004   Code   RO         1326    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         1328    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x00000316   0x00000316   0x00000008   Code   RO         1329    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0000031e   0x0000031e   0x00000002   Code   RO         1350    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x00000320   0x00000320   0x00000000   Code   RO         1400    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x00000320   0x00000320   0x00000004   Code   RO         1401    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x00000324   0x00000324   0x00000006   Code   RO         1402    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0000032a   0x0000032a   0x00000002   PAD
    0x0000032c   0x0000032c   0x00000006   Code   RO          947    .emb_text           driverlib.lib(sysctl.o)
    0x00000332   0x00000332   0x00000002   PAD
    0x00000334   0x00000334   0x00000026   Code   RO         1295    .emb_text           driverlib.lib(cpu.o)
    0x0000035a   0x0000035a   0x00000002   PAD
    0x0000035c   0x0000035c   0x00000114   Code   RO          117  * .text               startup_tm4c123.o
    0x00000470   0x00000470   0x0000003e   Code   RO         1307    .text               c_w.l(strlen.o)
    0x000004ae   0x000004ae   0x0000008a   Code   RO         1309    .text               c_w.l(rt_memcpy_v6.o)
    0x00000538   0x00000538   0x00000044   Code   RO         1311    .text               c_w.l(rt_memclr.o)
    0x0000057c   0x0000057c   0x00000006   Code   RO         1313    .text               c_w.l(heapauxi.o)
    0x00000582   0x00000582   0x00000064   Code   RO         1318    .text               c_w.l(rt_memcpy_w.o)
    0x000005e6   0x000005e6   0x0000004e   Code   RO         1320    .text               c_w.l(rt_memclr_w.o)
    0x00000634   0x00000634   0x0000004a   Code   RO         1337    .text               c_w.l(sys_stackheap_outer.o)
    0x0000067e   0x0000067e   0x00000012   Code   RO         1339    .text               c_w.l(exit.o)
    0x00000690   0x00000690   0x00000008   Code   RO         1347    .text               c_w.l(libspace.o)
    0x00000698   0x00000698   0x0000000c   Code   RO         1410    .text               c_w.l(sys_exit.o)
    0x000006a4   0x000006a4   0x00000002   Code   RO         1425    .text               c_w.l(use_no_semi.o)
    0x000006a6   0x000006a6   0x00000000   Code   RO         1427    .text               c_w.l(indicate_semi.o)
    0x000006a6   0x000006a6   0x00000002   PAD
    0x000006a8   0x000006a8   0x00000010   Code   RO           79    .text.LCD_Clear     lcd.o
    0x000006b8   0x000006b8   0x00000096   Code   RO           77    .text.LCD_Command   lcd.o
    0x0000074e   0x0000074e   0x00000002   PAD
    0x00000750   0x00000750   0x00000038   Code   RO           83    .text.LCD_Cursor    lcd.o
    0x00000788   0x00000788   0x00000058   Code   RO           89    .text.LCD_PrintLn   lcd.o
    0x000007e0   0x000007e0   0x00000098   Code   RO           81    .text.LCD_Show      lcd.o
    0x00000878   0x00000878   0x000000f4   Code   RO           75    .text.LCD_init      lcd.o
    0x0000096c   0x0000096c   0x00000004   PAD
    0x00000970   0x00000970   0x00000064   Code   RO          176    .text.PendSV_Handler  port.o
    0x000009d4   0x000009d4   0x000000c4   Code   RO           32    .text.PortE_ISR_Handler  main.o
    0x00000a98   0x00000a98   0x00000008   PAD
    0x00000aa0   0x00000aa0   0x00000024   Code   RO          160    .text.SVC_Handler   port.o
    0x00000ac4   0x00000ac4   0x0000003c   Code   RO          178    .text.SysTick_Handler  port.o
    0x00000b00   0x00000b00   0x0000010c   Code   RO          128    .text.SystemInit    system_tm4c123.o
    0x00000c0c   0x00000c0c   0x000004bc   Code   RO           12    .text.buttonTask    main.o
    0x000010c8   0x000010c8   0x00000170   Code   RO           20    .text.drivDownAuto  main.o
    0x00001238   0x00001238   0x000001c0   Code   RO           18    .text.drivDownManu  main.o
    0x000013f8   0x000013f8   0x00000170   Code   RO           16    .text.drivUpAuto    main.o
    0x00001568   0x00001568   0x000001c0   Code   RO           14    .text.drivUpManu    main.o
    0x00001728   0x00001728   0x00000162   Code   RO            2    .text.main          main.o
    0x0000188a   0x0000188a   0x00000002   PAD
    0x0000188c   0x0000188c   0x00000020   Code   RO          104    .text.motor_backward  motor.o
    0x000018ac   0x000018ac   0x00000020   Code   RO          102    .text.motor_forward  motor.o
    0x000018cc   0x000018cc   0x00000010   Code   RO          106    .text.motor_stop    motor.o
    0x000018dc   0x000018dc   0x0000001a   Code   RO          100    .text.motorinit     motor.o
    0x000018f6   0x000018f6   0x00000002   PAD
    0x000018f8   0x000018f8   0x000004c8   Code   RO           28    .text.passDownAuto  main.o
    0x00001dc0   0x00001dc0   0x00000518   Code   RO           26    .text.passDownManu  main.o
    0x000022d8   0x000022d8   0x000004c8   Code   RO           24    .text.passUpAuto    main.o
    0x000027a0   0x000027a0   0x00000518   Code   RO           22    .text.passUpManu    main.o
    0x00002cb8   0x00002cb8   0x00000032   Code   RO           34    .text.portCinit     main.o
    0x00002cea   0x00002cea   0x00000002   PAD
    0x00002cec   0x00002cec   0x00000066   Code   RO           36    .text.portEinit     main.o
    0x00002d52   0x00002d52   0x00000002   PAD
    0x00002d54   0x00002d54   0x0000011a   Code   RO          309    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x00002e6e   0x00002e6e   0x00000002   PAD
    0x00002e70   0x00002e70   0x0000014e   Code   RO          297    .text.prvAddNewTaskToReadyList  tasks.o
    0x00002fbe   0x00002fbe   0x00000002   PAD
    0x00002fc0   0x00002fc0   0x0000006a   Code   RO          433    .text.prvCheckForValidListAndQueue  timers.o
    0x0000302a   0x0000302a   0x00000002   PAD
    0x0000302c   0x0000302c   0x0000005a   Code   RO          399    .text.prvCheckTasksWaitingTermination  tasks.o
    0x00003086   0x00003086   0x00000002   PAD
    0x00003088   0x00003088   0x00000042   Code   RO          250    .text.prvCopyDataFromQueue  queue.o
    0x000030ca   0x000030ca   0x00000002   PAD
    0x000030cc   0x000030cc   0x000000cc   Code   RO          236    .text.prvCopyDataToQueue  queue.o
    0x00003198   0x00003198   0x00000018   Code   RO          303    .text.prvDeleteTCB  tasks.o
    0x000031b0   0x000031b0   0x00000026   Code   RO          254    .text.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x000031d6   0x000031d6   0x00000002   PAD
    0x000031d8   0x000031d8   0x00000040   Code   RO          463    .text.prvGetNextExpireTime  timers.o
    0x00003218   0x00003218   0x00000042   Code   RO          194    .text.prvHeapInit   heap_2.o
    0x0000325a   0x0000325a   0x00000002   PAD
    0x0000325c   0x0000325c   0x00000038   Code   RO          335    .text.prvIdleTask   tasks.o
    0x00003294   0x00003294   0x0000002c   Code   RO          224    .text.prvInitialiseMutex  queue.o
    0x000032c0   0x000032c0   0x00000044   Code   RO          220    .text.prvInitialiseNewQueue  queue.o
    0x00003304   0x00003304   0x00000116   Code   RO          295    .text.prvInitialiseNewTask  tasks.o
    0x0000341a   0x0000341a   0x00000002   PAD
    0x0000341c   0x0000341c   0x0000008e   Code   RO          397    .text.prvInitialiseTaskLists  tasks.o
    0x000034aa   0x000034aa   0x00000002   PAD
    0x000034ac   0x000034ac   0x00000086   Code   RO          477    .text.prvInsertTimerInActiveList  timers.o
    0x00003532   0x00003532   0x00000002   PAD
    0x00003534   0x00003534   0x00000028   Code   RO          252    .text.prvIsQueueEmpty  queue.o
    0x0000355c   0x0000355c   0x0000002e   Code   RO          240    .text.prvIsQueueFull  queue.o
    0x0000358a   0x0000358a   0x00000002   PAD
    0x0000358c   0x0000358c   0x000000ec   Code   RO          238    .text.prvNotifyQueueSetContainer  queue.o
    0x00003678   0x00003678   0x00000028   Code   RO          168    .text.prvPortStartFirstTask  port.o
    0x000036a0   0x000036a0   0x00000054   Code   RO          471    .text.prvProcessExpiredTimer  timers.o
    0x000036f4   0x000036f4   0x00000146   Code   RO          467    .text.prvProcessReceivedCommands  timers.o
    0x0000383a   0x0000383a   0x00000002   PAD
    0x0000383c   0x0000383c   0x0000009a   Code   RO          465    .text.prvProcessTimerOrBlockTask  timers.o
    0x000038d6   0x000038d6   0x00000002   PAD
    0x000038d8   0x000038d8   0x00000034   Code   RO          475    .text.prvReloadTimer  timers.o
    0x0000390c   0x0000390c   0x0000003c   Code   RO          301    .text.prvResetNextTaskUnblockTime  tasks.o
    0x00003948   0x00003948   0x00000044   Code   RO          469    .text.prvSampleTimeNow  timers.o
    0x0000398c   0x0000398c   0x00000052   Code   RO          473    .text.prvSwitchTimerLists  timers.o
    0x000039de   0x000039de   0x00000002   PAD
    0x000039e0   0x000039e0   0x0000004c   Code   RO          158    .text.prvTaskExitError  port.o
    0x00003a2c   0x00003a2c   0x0000001e   Code   RO          435    .text.prvTimerTask  timers.o
    0x00003a4a   0x00003a4a   0x00000002   PAD
    0x00003a4c   0x00003a4c   0x000000cc   Code   RO          242    .text.prvUnlockQueue  queue.o
    0x00003b18   0x00003b18   0x0000017c   Code   RO          192    .text.pvPortMalloc  heap_2.o
    0x00003c94   0x00003c94   0x0000002c   Code   RO          381    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x00003cc0   0x00003cc0   0x0000005e   Code   RO          156    .text.pxPortInitialiseStack  port.o
    0x00003d1e   0x00003d1e   0x00000002   PAD
    0x00003d20   0x00003d20   0x00000038   Code   RO           10    .text.setJamDetected  main.o
    0x00003d58   0x00003d58   0x00000038   Code   RO            6    .text.setLowerLimit  main.o
    0x00003d90   0x00003d90   0x00000038   Code   RO            4    .text.setUpperLimit  main.o
    0x00003dc8   0x00003dc8   0x00000058   Code   RO            8    .text.setWindowLock  main.o
    0x00003e20   0x00003e20   0x00000048   Code   RO          147    .text.uxListRemove  list.o
    0x00003e68   0x00003e68   0x0000000c   Code   RO          345    .text.uxTaskGetNumberOfTasks  tasks.o
    0x00003e74   0x00003e74   0x0000002e   Code   RO          139    .text.vListInitialise  list.o
    0x00003ea2   0x00003ea2   0x00000002   PAD
    0x00003ea4   0x00003ea4   0x0000000e   Code   RO          141    .text.vListInitialiseItem  list.o
    0x00003eb2   0x00003eb2   0x00000002   PAD
    0x00003eb4   0x00003eb4   0x0000006a   Code   RO          145    .text.vListInsert   list.o
    0x00003f1e   0x00003f1e   0x00000002   PAD
    0x00003f20   0x00003f20   0x0000003a   Code   RO          143    .text.vListInsertEnd  list.o
    0x00003f5a   0x00003f5a   0x00000002   PAD
    0x00003f5c   0x00003f5c   0x00000014   Code   RO          166    .text.vPortEnableVFP  port.o
    0x00003f70   0x00003f70   0x00000056   Code   RO          172    .text.vPortEnterCritical  port.o
    0x00003fc6   0x00003fc6   0x00000002   PAD
    0x00003fc8   0x00003fc8   0x0000004a   Code   RO          174    .text.vPortExitCritical  port.o
    0x00004012   0x00004012   0x00000002   PAD
    0x00004014   0x00004014   0x000000da   Code   RO          196    .text.vPortFree     heap_2.o
    0x000040ee   0x000040ee   0x00000002   PAD
    0x000040f0   0x000040f0   0x00000044   Code   RO          164    .text.vPortSetupTimerInterrupt  port.o
    0x00004134   0x00004134   0x00000084   Code   RO          180    .text.vPortValidateInterruptPriority  port.o
    0x000041b8   0x000041b8   0x00000064   Code   RO          274    .text.vQueueWaitForMessageRestricted  queue.o
    0x0000421c   0x0000421c   0x0000006e   Code   RO          313    .text.vTaskDelay    tasks.o
    0x0000428a   0x0000428a   0x00000002   PAD
    0x0000428c   0x0000428c   0x00000154   Code   RO          299    .text.vTaskDelete   tasks.o
    0x000043e0   0x000043e0   0x00000024   Code   RO          363    .text.vTaskInternalSetTimeOutState  tasks.o
    0x00004404   0x00004404   0x0000000e   Code   RO          367    .text.vTaskMissedYield  tasks.o
    0x00004412   0x00004412   0x00000002   PAD
    0x00004414   0x00004414   0x00000042   Code   RO          351    .text.vTaskPlaceOnEventList  tasks.o
    0x00004456   0x00004456   0x00000002   PAD
    0x00004458   0x00004458   0x0000007c   Code   RO          355    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x000044d4   0x000044d4   0x00000182   Code   RO          377    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x00004656   0x00004656   0x00000002   PAD
    0x00004658   0x00004658   0x000000b2   Code   RO          333    .text.vTaskStartScheduler  tasks.o
    0x0000470a   0x0000470a   0x00000002   PAD
    0x0000470c   0x0000470c   0x00000010   Code   RO          307    .text.vTaskSuspendAll  tasks.o
    0x0000471c   0x0000471c   0x000000be   Code   RO          325    .text.vTaskSwitchContext  tasks.o
    0x000047da   0x000047da   0x00000002   PAD
    0x000047dc   0x000047dc   0x00000016   Code   RO           30    .text.vlcdWrite     main.o
    0x000047f2   0x000047f2   0x00000002   PAD
    0x000047f4   0x000047f4   0x0000017c   Code   RO          162    .text.xPortStartScheduler  port.o
    0x00004970   0x00004970   0x00000026   Code   RO          222    .text.xQueueCreateMutex  queue.o
    0x00004996   0x00004996   0x00000002   PAD
    0x00004998   0x00004998   0x0000009a   Code   RO          218    .text.xQueueGenericCreate  queue.o
    0x00004a32   0x00004a32   0x00000002   PAD
    0x00004a34   0x00004a34   0x00000108   Code   RO          216    .text.xQueueGenericReset  queue.o
    0x00004b3c   0x00004b3c   0x00000274   Code   RO          228    .text.xQueueGenericSend  queue.o
    0x00004db0   0x00004db0   0x00000182   Code   RO          246    .text.xQueueGiveFromISR  queue.o
    0x00004f32   0x00004f32   0x00000002   PAD
    0x00004f34   0x00004f34   0x000001dc   Code   RO          248    .text.xQueueReceive  queue.o
    0x00005110   0x00005110   0x00000210   Code   RO          232    .text.xQueueSemaphoreTake  queue.o
    0x00005320   0x00005320   0x000000d2   Code   RO          365    .text.xTaskCheckForTimeOut  tasks.o
    0x000053f2   0x000053f2   0x00000002   PAD
    0x000053f4   0x000053f4   0x000000a0   Code   RO          293    .text.xTaskCreate   tasks.o
    0x00005494   0x00005494   0x00000014   Code   RO          369    .text.xTaskGetCurrentTaskHandle  tasks.o
    0x000054a8   0x000054a8   0x00000038   Code   RO          371    .text.xTaskGetSchedulerState  tasks.o
    0x000054e0   0x000054e0   0x00000014   Code   RO          341    .text.xTaskGetTickCount  tasks.o
    0x000054f4   0x000054f4   0x00000260   Code   RO          339    .text.xTaskIncrementTick  tasks.o
    0x00005754   0x00005754   0x00000138   Code   RO          375    .text.xTaskPriorityDisinherit  tasks.o
    0x0000588c   0x0000588c   0x0000015c   Code   RO          373    .text.xTaskPriorityInherit  tasks.o
    0x000059e8   0x000059e8   0x0000018c   Code   RO          357    .text.xTaskRemoveFromEventList  tasks.o
    0x00005b74   0x00005b74   0x00000222   Code   RO          311    .text.xTaskResumeAll  tasks.o
    0x00005d96   0x00005d96   0x00000002   PAD
    0x00005d98   0x00005d98   0x0000006c   Code   RO          431    .text.xTimerCreateTimerTask  timers.o
    0x00005e04   0x00005e04   0x00000028   Code   RO          498    i.GPIODirModeSet    driverlib.lib(gpio.o)
    0x00005e2c   0x00005e2c   0x00000006   Code   RO          499    i.GPIOIntClear      driverlib.lib(gpio.o)
    0x00005e32   0x00005e32   0x0000000c   Code   RO          501    i.GPIOIntEnable     driverlib.lib(gpio.o)
    0x00005e3e   0x00005e3e   0x0000000e   Code   RO          504    i.GPIOIntStatus     driverlib.lib(gpio.o)
    0x00005e4c   0x00005e4c   0x00000050   Code   RO          506    i.GPIOIntTypeSet    driverlib.lib(gpio.o)
    0x00005e9c   0x00005e9c   0x00000170   Code   RO          510    i.GPIOPadConfigSet  driverlib.lib(gpio.o)
    0x0000600c   0x0000600c   0x00000006   Code   RO          512    i.GPIOPinRead       driverlib.lib(gpio.o)
    0x00006012   0x00006012   0x0000001c   Code   RO          521    i.GPIOPinTypeGPIOInput  driverlib.lib(gpio.o)
    0x0000602e   0x0000602e   0x0000001c   Code   RO          522    i.GPIOPinTypeGPIOOutput  driverlib.lib(gpio.o)
    0x0000604a   0x0000604a   0x00000006   Code   RO          540    i.GPIOPinWrite      driverlib.lib(gpio.o)
    0x00006050   0x00006050   0x00000064   Code   RO          832    i.IntEnable         driverlib.lib(interrupt.o)
    0x000060b4   0x000060b4   0x0000000e   Code   RO          835    i.IntMasterEnable   driverlib.lib(interrupt.o)
    0x000060c2   0x000060c2   0x00000002   PAD
    0x000060c4   0x000060c4   0x00000028   Code   RO          843    i.IntPrioritySet    driverlib.lib(interrupt.o)
    0x000060ec   0x000060ec   0x00000034   Code   RO          844    i.IntRegister       driverlib.lib(interrupt.o)
    0x00006120   0x00006120   0x00000028   Code   RO          981    i.SysCtlPeripheralEnable  driverlib.lib(sysctl.o)
    0x00006148   0x00006148   0x0000001a   Code   RO         1408    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x00006162   0x00006162   0x00000002   PAD
    0x00006164   0x00006164   0x0000010c   Data   RO          848    .constdata          driverlib.lib(interrupt.o)
    0x00006270   0x00006270   0x0000015b   Data   RO           45    .rodata.str1.1      main.o
    0x000063cb   0x000063cb   0x00000005   Data   RO          417    .rodata.str1.1      tasks.o
    0x000063d0   0x000063d0   0x00000008   Data   RO          480    .rodata.str1.1      timers.o
    0x000063d8   0x000063d8   0x00000004   Data   RO          402    .rodata.uxTopUsedPriority  tasks.o
    0x000063dc   0x000063dc   0x00000020   Data   RO         1483    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x00006400, Size: 0x00002a80, Max: 0x00008000, ABSOLUTE, COMPRESSED[0x00000030])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00000004   Data   RW          130    .data.SystemCoreClock  system_tm4c123.o
    0x20000004   COMPRESSED   0x00000004   Data   RW           54    .data.pctextforlcd1  main.o
    0x20000008   COMPRESSED   0x00000004   Data   RW           59    .data.pctextforlcd2  main.o
    0x2000000c   COMPRESSED   0x00000004   Data   RW           60    .data.pctextforlcd3  main.o
    0x20000010   COMPRESSED   0x00000004   Data   RW           61    .data.pctextforlcd4  main.o
    0x20000014   COMPRESSED   0x00000004   Data   RW           62    .data.pctextforlcd5  main.o
    0x20000018   COMPRESSED   0x00000004   Data   RW           64    .data.pctextforlcd6  main.o
    0x2000001c   COMPRESSED   0x00000004   Data   RW           65    .data.pctextforlcd7  main.o
    0x20000020   COMPRESSED   0x00000004   Data   RW           66    .data.pctextforlcd8  main.o
    0x20000024   COMPRESSED   0x00000004   Data   RW          184    .data.uxCriticalNesting  port.o
    0x20000028   COMPRESSED   0x00000004   Data   RW          205    .data.xFreeBytesRemaining  heap_2.o
    0x2000002c   COMPRESSED   0x000003d4   PAD
    0x20000400   COMPRESSED   0x0000026c   Data   RW          849    vtable              driverlib.lib(interrupt.o)
    0x2000066c   COMPRESSED   0x00000004   PAD
    0x20000670        -       0x00000060   Zero   RW         1348    .bss                c_w.l(libspace.o)
    0x200006d0        -       0x00000004   Zero   RW           56    .bss.jamDetected    main.o
    0x200006d4        -       0x00000001   Zero   RW           58    .bss.lowerLimitReached  main.o
    0x200006d5   COMPRESSED   0x00000003   PAD
    0x200006d8        -       0x00000004   Zero   RW          484    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x200006dc        -       0x00000004   Zero   RW          204    .bss.pvPortMalloc.xHeapHasBeenInitialised  heap_2.o
    0x200006e0        -       0x00000004   Zero   RW          401    .bss.pxCurrentTCB   tasks.o
    0x200006e4        -       0x00000004   Zero   RW          482    .bss.pxCurrentTimerList  timers.o
    0x200006e8        -       0x00000004   Zero   RW          412    .bss.pxDelayedTaskList  tasks.o
    0x200006ec        -       0x00000004   Zero   RW          413    .bss.pxOverflowDelayedTaskList  tasks.o
    0x200006f0        -       0x00000004   Zero   RW          483    .bss.pxOverflowTimerList  timers.o
    0x200006f4        -       0x00000064   Zero   RW          403    .bss.pxReadyTasksLists  tasks.o
    0x20000758        -       0x00002000   Zero   RW          208    .bss.ucHeap         heap_2.o
    0x20002758        -       0x00000001   Zero   RW          182    .bss.ucMaxSysCallPriority  port.o
    0x20002759   COMPRESSED   0x00000003   PAD
    0x2000275c        -       0x00000004   Zero   RW          183    .bss.ulMaxPRIGROUPValue  port.o
    0x20002760        -       0x00000001   Zero   RW           55    .bss.upperLimitReached  main.o
    0x20002761   COMPRESSED   0x00000003   PAD
    0x20002764        -       0x00000004   Zero   RW          408    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20002768        -       0x00000004   Zero   RW          407    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x2000276c        -       0x00000004   Zero   RW          410    .bss.uxSchedulerSuspended  tasks.o
    0x20002770        -       0x00000004   Zero   RW          405    .bss.uxTaskNumber   tasks.o
    0x20002774        -       0x00000004   Zero   RW          404    .bss.uxTopReadyPriority  tasks.o
    0x20002778        -       0x00000004   Zero   RW           57    .bss.windowLock     main.o
    0x2000277c        -       0x00000014   Zero   RW          485    .bss.xActiveTimerList1  timers.o
    0x20002790        -       0x00000014   Zero   RW          486    .bss.xActiveTimerList2  timers.o
    0x200027a4        -       0x00000014   Zero   RW          422    .bss.xDelayedTaskList1  tasks.o
    0x200027b8        -       0x00000014   Zero   RW          423    .bss.xDelayedTaskList2  tasks.o
    0x200027cc        -       0x00000004   Zero   RW           39    .bss.xDriverDownButtonMutex  main.o
    0x200027d0        -       0x00000004   Zero   RW           38    .bss.xDriverUpButtonMutex  main.o
    0x200027d4        -       0x00000008   Zero   RW          207    .bss.xEnd           heap_2.o
    0x200027dc        -       0x00000004   Zero   RW          418    .bss.xIdleTaskHandle  tasks.o
    0x200027e0        -       0x00000004   Zero   RW          419    .bss.xNextTaskUnblockTime  tasks.o
    0x200027e4        -       0x00000004   Zero   RW          421    .bss.xNumOfOverflows  tasks.o
    0x200027e8        -       0x00000004   Zero   RW          420    .bss.xPendedTicks   tasks.o
    0x200027ec        -       0x00000014   Zero   RW          416    .bss.xPendingReadyList  tasks.o
    0x20002800        -       0x00000004   Zero   RW           40    .bss.xQueue         main.o
    0x20002804        -       0x00000004   Zero   RW          409    .bss.xSchedulerRunning  tasks.o
    0x20002808        -       0x00000008   Zero   RW          206    .bss.xStart         heap_2.o
    0x20002810        -       0x00000014   Zero   RW          414    .bss.xSuspendedTaskList  tasks.o
    0x20002824        -       0x00000004   Zero   RW           63    .bss.xTaskHandlePassed  main.o
    0x20002828        -       0x00000014   Zero   RW          406    .bss.xTasksWaitingTermination  tasks.o
    0x2000283c        -       0x00000004   Zero   RW          411    .bss.xTickCount     tasks.o
    0x20002840        -       0x00000004   Zero   RW          479    .bss.xTimerQueue    timers.o
    0x20002844        -       0x00000004   Zero   RW          481    .bss.xTimerTaskHandle  timers.o
    0x20002848        -       0x00000004   Zero   RW          415    .bss.xYieldPending  tasks.o
    0x2000284c        -       0x00000004   Zero   RW           49    .bss.xdrivDownAutoHandle  main.o
    0x20002850        -       0x00000004   Zero   RW           48    .bss.xdrivDownManuHandle  main.o
    0x20002854        -       0x00000004   Zero   RW           47    .bss.xdrivUpAutoHandle  main.o
    0x20002858        -       0x00000004   Zero   RW           46    .bss.xdrivUpManuHandle  main.o
    0x2000285c        -       0x00000004   Zero   RW           44    .bss.xjamDetectedSemaphore  main.o
    0x20002860        -       0x00000004   Zero   RW           42    .bss.xlowerLimitReachedSemaphore  main.o
    0x20002864        -       0x00000004   Zero   RW           53    .bss.xpassDownAutoHandle  main.o
    0x20002868        -       0x00000004   Zero   RW           52    .bss.xpassDownManuHandle  main.o
    0x2000286c        -       0x00000004   Zero   RW           51    .bss.xpassUpAutoHandle  main.o
    0x20002870        -       0x00000004   Zero   RW           50    .bss.xpassUpManuHandle  main.o
    0x20002874        -       0x00000004   Zero   RW           41    .bss.xupperLimitReachedSemaphore  main.o
    0x20002878        -       0x00000004   Zero   RW           43    .bss.xwindowLockSemaphore  main.o
    0x2000287c   COMPRESSED   0x00000004   PAD
    0x20002880        -       0x00000000   Zero   RW          115    HEAP                startup_tm4c123.o
    0x20002880        -       0x00000200   Zero   RW          114    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       664          0          0          4       8212       3163   heap_2.o
       706          0          0          0          0       2361   lcd.o
       296          0          0          0          0       2370   list.o
      8880          0        347         32         74       9830   main.o
       106          0          0          0          0        666   motor.o
      1166         16          0          4          5       4012   port.o
      3520          0          0          0          0      16094   queue.o
       276         24        620          0        512       5528   startup_tm4c123.o
       268          0          0          4          0       6786   system_tm4c123.o
      5458          0          9          0        260      22251   tasks.o
      1208         10          8          0         60       8440   timers.o

    ----------------------------------------------------------------------
     22640         50       1016       1024       9136      81501   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        92          0          0        980         13          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        58          0          0          0          0          0   __dczerorl.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        62          0          0          0          0         76   strlen.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        38          0          0          0          0        572   cpu.o
       588         14          0          0          0      10892   gpio.o
       206         20        268        620          0       3197   interrupt.o
        46          4          0          0          0        877   sysctl.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
      1672         54        268        620        100      16610   Library Totals
        14          0          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       754         16          0          0         96        956   c_w.l
       878         38        268        620          0      15538   driverlib.lib
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
      1672         54        268        620        100      16610   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     24312        104       1284       1644       9236      96315   Grand Totals
     24312        104       1284         48       9236      96315   ELF Image Totals (compressed)
     24312        104       1284         48          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                25596 (  25.00kB)
    Total RW  Size (RW Data + ZI Data)             10880 (  10.62kB)
    Total ROM Size (Code + RO Data + RW Data)      25644 (  25.04kB)

==============================================================================

